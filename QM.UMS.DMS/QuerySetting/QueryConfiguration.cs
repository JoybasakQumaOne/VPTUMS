using System.Collections.Generic;

namespace QM.eBook.DMS.QuerySetting
{
    public class QueryConfiguration
    {
        Dictionary<string, string> queryConfiguration = new Dictionary<string, string>();
        public QueryConfiguration()
        {
            queryConfiguration.Add("GetDocumentTypeByDocumentTypeId", "SELECT DT.Id,DT.DocumentType, DT.FileSize,DT.MinImageWidth,DT.MinImageHeight,DT.MaxImageWidth,DT.MaxImageHeight FROM DMS.DocumentType DT WHERE DT.Id=@DocumentTypeId;");
            queryConfiguration.Add("GetFileNameByDocumentId", "SELECT D.UploadedFileName,DV.Id DocumentVersionId,DV.[Version] FROM DMS.Document D LEFT JOIN DMS.DocumentVersion DV On D.Id=DV.DocumentId where D.Id=@Id");
            queryConfiguration.Add("GetImageTypeWithDocumentTypeDetailsByDocumentAndDocumentTypeId", "SELECT DT.DocumentType,IT.Id ImageTypeId,IT.TypeName,IT.Width,IT.Height,DV.Id VersionId FROM DMS.Document D INNER JOIN DMS.DocumentType DT ON DT.Id=D.DocumentTypeId INNER JOIN DMS.ImageType IT ON DT.Id=IT.DocumentTypeId INNER JOIN DMS.DocumentVersion DV ON D.Id=DV.DocumentId where  D.Id=@DocumentId and DT.Id=@DocumentTypeId;");
            queryConfiguration.Add("GetImageDocumentImageName", "SELECT ImgDoc.ImageName FROM DMS.ImageDocument ImgDoc where ImgDoc.DocumentId=@DocumentId AND ImgDoc.ImageTypeId=@ImageTypeId and ImgDoc.DocumentVersionId=@DocumentVersionId;");
            queryConfiguration.Add("UpdateImageDocument", "UPDATE DMS.ImageDocument set ImageName=@ImageName,ModifiedBy=@ModifiedBy,Modifiedon=@Modifiedon,Width=@Width,Height=@Height where DocumentId=@DocumentId AND ImageTypeId=@ImageTypeId and DocumentVersionId=@DocumentVersionId;");
            queryConfiguration.Add("GetDocumentList", "SELECT D.Id DocumentId,D.DocumentGuid,D.DocumentTypeId, D.Name DocumentName, D.UploadedFileName,D.CostFee, D.CreatedBy, D.ExpiredDate,D.FileSize, FilePath=(SELECT F.PhysicallFolderName FROM DMS.Folder F WHERE F.Id=D.FolderId), MIMEType=(SELECT FTM.MIMEType FROM common.FileTypeMaster FTM WHERE FTM.Id =D.BaseDocumentType), D.ImageWidth,D.ImageHeight,D.CreatedOn,D.ReviewStatus,D.AllowReviewersToReassignReview, D.NotifyInitiatorWhenReviewComplete,D.UseDefaultWorkflow, D.ReviewerInstruction,FF.FolderCode FROM DMS.Document D INNER JOIN DMS.DocumentType DT ON DT.Id=D.DocumentTypeId Inner Join DMS.Folder FF on FF.Id=D.FolderId WHERE D.Id IN (SELECT CAST(Value AS INT) FROM Ids_Split(@IDs, ','));");
            queryConfiguration.Add("GetDocumentListByImageType", "SELECT D.Id DocumentId,D.DocumentGuid,D.Name DocumentName, ImgDoc.ImageName UploadedFileName,D.CostFee, D.CreatedBy, D.ExpiredDate,D.FileSize,FilePath=(SELECT F.PhysicallFolderName FROM DMS.Folder F WHERE F.Id=D.FolderId),MIMEType=(SELECT FTM.MIMEType FROM common.FileTypeMaster FTM WHERE FTM.Id =D.BaseDocumentType),D.ReviewStatus,D.AllowReviewersToReassignReview,D.NotifyInitiatorWhenReviewComplete,D.UseDefaultWorkflow,D.ReviewerInstruction FROM DMS.Document D INNER JOIN DMS.DocumentType DT ON DT.Id=D.DocumentTypeId INNER JOIN DMS.ImageType IT ON DT.Id=IT.DocumentTypeId INNER JOIN DMS.ImageDocument ImgDoc ON IT.Id=ImgDoc.ImageTypeId WHERE IT.TypeName=@ImagetTypeName and D.Id=ImgDoc.DocumentId and D.Id IN(SELECT CAST(Value AS INT) FROM Ids_Split(@IDs, ',')) ORDER BY D.Id DESC;");
            queryConfiguration.Add("GetDocumentListByImageTypeByDocGuid", "SELECT D.Id DocumentId, D.Name DocumentName, D.UploadedFileName, D.CostFee, D.CreatedBy, D.ExpiredDate, D.FileSize, FilePath = (SELECT F.PhysicallFolderName FROM DMS.Folder F WHERE F.Id = D.FolderId),MIMEType = (SELECT FTM.MIMEType FROM common.FileTypeMaster FTM WHERE FTM.Id = D.BaseDocumentType),D.ReviewStatus,D.AllowReviewersToReassignReview,D.NotifyInitiatorWhenReviewComplete,D.UseDefaultWorkflow,D.ReviewerInstruction FROM DMS.Document D INNER JOIN DMS.DocumentType DT ON DT.Id = D.DocumentTypeId LEFT JOIN DMS.ImageType IT ON DT.Id = IT.DocumentTypeId LEFT JOIN DMS.ImageDocument ImgDoc ON IT.Id = ImgDoc.ImageTypeId WHERE D.DocumentGuid IN(SELECT CAST(Value AS NVARCHAR(150)) FROM Ids_Split(@IDs, ',')) ; ");
            queryConfiguration.Add("GetDocumentListByImageTypeList", "SELECT D.Id DocumentId,D.Name DocumentName, D.UploadedFileName,D.CostFee, D.CreatedBy, D.ExpiredDate,D.FileSize,FilePath=(SELECT F.PhysicallFolderName FROM DMS.Folder F WHERE F.Id=D.FolderId),MIMEType=(SELECT FTM.MIMEType FROM common.FileTypeMaster FTM WHERE FTM.Id =D.BaseDocumentType),IT.Width,IT.Height,DT.Code,IT.Id ImageTypeId, D.ReviewStatus,D.AllowReviewersToReassignReview,D.NotifyInitiatorWhenReviewComplete,D.UseDefaultWorkflow,D.ReviewerInstruction FROM DMS.Document D INNER JOIN DMS.DocumentType DT ON DT.Id=D.DocumentTypeId INNER JOIN DMS.ImageType IT ON DT.Id=IT.DocumentTypeId WHERE IT.TypeName IN(SELECT Value FROM Ids_Split(@ImagetTypeName,',')) and D.DocumentGuid=@DocumentId;");
            queryConfiguration.Add("GetDocumentImageByDocumentId", "SELECT D.Id DocumentId,D.Name DocumentName, D.UploadedFileName,D.CostFee, D.CreatedBy, D.ExpiredDate,D.FileSize, FilePath=(SELECT F.PhysicallFolderName FROM DMS.Folder F WHERE F.Id=D.FolderId), MIMEType=(SELECT FTM.MIMEType FROM common.FileTypeMaster FTM WHERE FTM.Id =D.BaseDocumentType), DT.Code,DT.MinImageWidth,DT.MinImageHeight,DT.MaxImageWidth,DT.MaxImageHeight FROM DMS.Document D INNER JOIN DMS.DocumentType DT ON DT.Id=D.DocumentTypeId INNER JOIN DMS.ImageType IT ON DT.Id=IT.DocumentTypeId where D.Id=@DocumentId;");
            queryConfiguration.Add("GetDocumentTypeByCode", "SELECT TOP 1 Id FROM DMS.DocumentType WHERE Code=@Code;");
            queryConfiguration.Add("UpdateDocumentVersion", "UPDATE DMS.DocumentVersion SET DocumentVersionName=@DocumentVersionName,ModifiedBy=@ModifiedBy,Modifiedon=@Modifiedon OUTPUT INSERTED.Id WHERE DocumentId=@DocumentId AND IsActive=1;");
            queryConfiguration.Add("GetFolderIdByCode", "SELECT F.Id from DMS.Folder F WHERE F.FolderCode=@FolderCode;");
            queryConfiguration.Add("GetFolderNameById", "SELECT F.Id,F.PhysicallFolderName from DMS.Folder F WHERE F.Id=@Id;");
            queryConfiguration.Add("GetImageTypeWithDocumentTypeDetailsByDocumentTypeId", "SELECT DT.DocumentType,IT.Id ImageTypeId,IT.TypeName,IT.Width,IT.Height FROM DMS.DocumentType DT INNER JOIN DMS.ImageType IT ON DT.Id=IT.DocumentTypeId where DT.Id=@DocumentTypeId;");
            queryConfiguration.Add("AddImageDocument", "INSERT INTO DMS.ImageDocument(DocumentId,ImageName,ImageTypeId,DocumentVersionId,CreatedBy,CreatedOn,Width,Height)VALUES(@DocumentId,@ImageName,@ImageTypeId,@DocumentVersionId,@CreatedBy,@CreatedOn,@Width,@Height);SELECT SCOPE_IDENTITY();");
            queryConfiguration.Add("SaveAsAddDocumentVersion", "INSERT INTO [DMS].[DocumentVersion]([DocumentId],[Version],DocumentVersionName,[IsActive],[CreatedBy],[CreatedOn],Tid)VALUES(@DocumentId,@Version,@DocumentVersionName,@IsActive,@CreatedBy,@CreatedOn,(select D.Id from DMS.Document D where D.Id=@oldDocumentId));SELECT SCOPE_IDENTITY();");
            queryConfiguration.Add("ActiveCurrentVerion", "UPDATE DMS.DocumentVersion SET IsActive=0 WHERE DocumentId=@DocumentId;UPDATE DMS.DocumentVersion SET IsActive=1 WHERE Id=@Id;");
            queryConfiguration.Add("AddDocument", "INSERT INTO [DMS].[Document]([DocumentTypeId],[Name],[UploadedFileName],[BaseDocumentType],[Title],[DocumentSubject],[Keywords],[DocumentNumber],[Comment],[CostFee],[ExpiredDate] ,[CreatedBy],[CreatedOn],[FileSize],ParentId,ImageWidth,ImageHeight,FolderId,ReviewStatus,AllowReviewersToReassignReview,NotifyInitiatorWhenReviewComplete,UseDefaultWorkflow,ReviewerInstruction,[DocumentGuid])VALUES((SELECT Id FROM DMS.DocumentType WHERE Code= @DocumentTypeId),@Name,@UploadedFileName,@BaseDocumentType,@Title,@DocumentSubject,@Keywords,@DocumentNumber,@Comment,@CostFee,@ExpiredDate,@CreatedBy,@CreatedOn,@FileSize,@ParentId,@ImageWidth,@ImageHeight,(SELECT Id FROM DMS.Folder WHERE FolderCode=@FolderId),@ReviewStatus,@AllowReviewersToReassignReview,@NotifyInitiatorWhenReviewComplete,@UseDefaultWorkflow,@ReviewerInstruction,@DocumentGuid);SELECT SCOPE_IDENTITY();");
            queryConfiguration.Add("AddDocumentVersion", "INSERT INTO [DMS].[DocumentVersion]([DocumentId],[Version],DocumentVersionName,[IsActive],[CreatedBy],[CreatedOn])VALUES(@DocumentId,@Version,@DocumentVersionName,@IsActive,@CreatedBy,@CreatedOn);SELECT SCOPE_IDENTITY();");
            queryConfiguration.Add("CheckIsImage", "SELECT COUNT(*) TotalCount FROM DMS.ImageType WHERE DocumentTypeId=@DocumentTypeId;");
            queryConfiguration.Add("GetAllFolder", "SELECT F.Id,F.FolderCode,F.FolderName,F.PhysicallFolderName,F.ParentId,F.CreatedBy,F.CreatedOn,F.ModifiedBy,F.Modifiedon,F.IsVisible FROM DMS.Folder F WHERE ParentId=0 OR ParentId=NULL;");
            queryConfiguration.Add("GetFolderById", "SELECT F.Id,F.FolderCode,F.FolderName,F.PhysicallFolderName,F.ParentId,F.CreatedBy,F.CreatedOn,F.ModifiedBy,F.Modifiedon,F.IsVisible FROM DMS.Folder F WHERE ParentId=@Id;");
            queryConfiguration.Add("AddFolder", "INSERT INTO DMS.Folder(FolderCode,FolderName,PhysicallFolderName,ParentId,CreatedBy,CreatedOn,IsVisible)VALUES(@FolderCode,@FolderName,@PhysicallFolderName,@ParentId,@CreatedBy,@CreatedOn,@IsVisible);SELECT SCOPE_IDENTITY();");
            queryConfiguration.Add("ModifyFolder", "UPDATE DMS.Folder SET FolderName=@FolderName,ModifiedBy=@ModifiedBy,Modifiedon=@Modifiedon WHERE Id=@Id;");
            queryConfiguration.Add("GetDocumentListByImageTypeListAndDocumentList", "SELECT D.Id DocumentId, D.DocumentTypeId, D.Name DocumentName, D.UploadedFileName, D.CreatedBy, D.ImageHeight, D.ImageWidth, FilePath = (SELECT F.PhysicallFolderName FROM DMS.Folder F WHERE F.Id = D.FolderId), D.ExpiredDate, D.FileSize from DMS.Document D INNER JOIN DMS.DocumentType DT ON DT.Id = D.DocumentTypeId where D.Id IN (SELECT CAST(Value AS INT) FROM Ids_Split(@IDs, ','))");
            queryConfiguration.Add("GetImageDocumentList", "SELECT ImgDoc.Id,ImgDoc.ImageName,ImgDoc.Width,ImgDoc.Height,IT.TypeName from DMS.ImageDocument ImgDoc INNER JOIN DMS.ImageType IT ON IT.Id = ImgDoc.ImageTypeId where ImgDoc.Id IN(SELECT ImgDoc2.Id from DMS.ImageDocument ImgDoc2 WHERE ImgDoc2.DocumentId = @DocumentId) and IT.TypeName IN(SELECT CAST(Value AS nvarchar) FROM Ids_Split(@ImagetTypeName, ',')); ");
            queryConfiguration.Add("UpdateImageProperties", "update DMS.Document set ImageWidth=@width,ImageHeight=@height where Id=@Id");
            queryConfiguration.Add("GetFolderNameByFolderCode", "select Id,PhysicallFolderName from DMS.Folder where FolderCode=@FolderCode");
            queryConfiguration.Add("DeleteImageDocument", "delete from DMS.ImageDocument where Id in (SELECT Value FROM Ids_Split(@Ids,','))");
            queryConfiguration.Add("DeleteOriginalDocument", "delete from DMS.DocumentVersion where DocumentId=@docId;delete from DMS.Document where Id=@docId");
            queryConfiguration.Add("GetDocumentByDocumentType", "SELECT D.Id DocumentId,D.DocumentGuid, D.Name DocumentName, D.UploadedFileName,D.CostFee, D.CreatedBy, D.ExpiredDate,D.FileSize,FilePath=(SELECT F.PhysicallFolderName FROM DMS.Folder F WHERE F.Id=D.FolderId),MIMEType=(SELECT FTM.MIMEType FROM common.FileTypeMaster FTM WHERE FTM.Id =D.BaseDocumentType), D.ImageWidth,D.ImageHeight,D.CreatedOn,D.ReviewStatus,D.AllowReviewersToReassignReview,D.NotifyInitiatorWhenReviewComplete,D.UseDefaultWorkflow,D.ReviewerInstruction,DV.DocumentVersionName ActivetedFileName FROM DMS.Document D INNER JOIN DMS.DocumentType DT ON DT.Id=D.DocumentTypeId LEFT JOIN DMS.DocumentVersion DV ON D.Id=DV.DocumentId WHERE DT.DocumentType=@documentType;");
            queryConfiguration.Add("DeleteFolder", "Update DMS.Folder set Isdeleted=1 WHERE FolderCode=@folderCode");
            queryConfiguration.Add("GetDocumentByDocumentguid", "SELECT FF.PhysicallFolderName,FF.Id as FOlderId,D.Id DocumentId,D.DocumentGuid,D.DocumentTypeId,DT.DocumentType ,D.Name DocumentName, D.UploadedFileName,D.CostFee, D.CreatedBy, D.ExpiredDate,D.FileSize, FilePath=(SELECT F.PhysicallFolderName FROM DMS.Folder F WHERE F.Id=D.FolderId), MIMEType=(SELECT FTM.MIMEType FROM common.FileTypeMaster FTM WHERE FTM.Id =D.BaseDocumentType), D.ImageWidth,D.ImageHeight,D.CreatedOn,D.ReviewStatus,D.AllowReviewersToReassignReview, D.NotifyInitiatorWhenReviewComplete,D.UseDefaultWorkflow, D.ReviewerInstruction,FF.FolderCode FROM DMS.Document D INNER JOIN DMS.DocumentType DT ON DT.Id=D.DocumentTypeId Inner Join DMS.Folder FF on FF.Id=D.FolderId WHERE D.DocumentGuid =@ID;");
            queryConfiguration.Add("GetDocumentImageVariations", "SELECT DISTINCT D.Id DocumentId,Id.imageName DocumentName, D.UploadedFileName,D.CostFee, D.CreatedBy, D.ExpiredDate,D.FileSize, FilePath = (SELECT F.PhysicallFolderName FROM DMS.Folder F WHERE F.Id = D.FolderId), MIMEType = (SELECT FTM.MIMEType FROM common.FileTypeMaster FTM WHERE FTM.Id = D.BaseDocumentType), DT.Code,DT.MinImageWidth,DT.MinImageHeight,DT.MaxImageWidth,DT.MaxImageHeight,IT.TypeName FROM DMS.Document D INNER JOIN DMS.DocumentType DT ON DT.Id = D.DocumentTypeId INNER JOIN DMS.ImageDocument ID ON D.Id = Id.documentId INNER JOIN DMS.ImageType IT ON ID.ImageTypeId = IT.Id where D.DocumentGuid=@DocumentId;");
            queryConfiguration.Add("UpdateOriginalFileName", "UPDATE DMS.Document SET UploadedFileName=@fileName WHERE Id=@documentId;");
            queryConfiguration.Add("UpdateTypedDocumentFileName", "UPDATE DMS.ImageDocument SET ImageName=@fileName WHERE Id=@documentId;");
            queryConfiguration.Add("GetDocumentByObjectId", "SELECT FF.PhysicallFolderName,FF.Id as FOlderId,D.Id DocumentId,D.DocumentGuid,D.DocumentTypeId,DT.DocumentType ,D.Name DocumentName, D.UploadedFileName,D.CostFee, D.CreatedBy, D.ExpiredDate,D.FileSize, FilePath=(SELECT F.PhysicallFolderName FROM DMS.Folder F WHERE F.Id=D.FolderId), MIMEType=(SELECT FTM.MIMEType FROM common.FileTypeMaster FTM WHERE FTM.Id =D.BaseDocumentType), D.ImageWidth,D.ImageHeight,D.CreatedOn,D.ReviewStatus,D.AllowReviewersToReassignReview, D.NotifyInitiatorWhenReviewComplete,D.UseDefaultWorkflow, D.ReviewerInstruction,FF.FolderCode FROM DocumentsMapping DM INNER JOIN DMS.Document D ON DM.DocumentId=D.Id INNER JOIN DMS.DocumentType DT ON DT.Id=D.DocumentTypeId Inner Join DMS.Folder FF on FF.Id=D.FolderId WHERE DM.ObjectId=@objectId AND DM.DocumentType=@documentType AND DM.ObjectType=@objectType");
            queryConfiguration.Add("IfDocumentPresentInFolder", "IF exists ( SELECT D.Id FROM DMS.Document D INNER JOIN DMS.Folder F ON D.FolderId=F.Id WHERE D.DocumentGuid=@documentId AND F.FolderCode=@folderCode ) BEGIN SELECT 1; END ELSE BEGIN SELECT 0; END");

        }
        public Dictionary<string,string> GetAllQuery()
        {
            return queryConfiguration;
        }
    }
}
