<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  
  <configSections>       
    <section name="UserGroupQueryConfigurations" type="System.Configuration.NameValueSectionHandler" />
    <section name="ActionQueryConfigurations" type="System.Configuration.NameValueSectionHandler"/>
    <section name="ResourceQueryConfigurations" type="System.Configuration.NameValueSectionHandler"/>
    <section name="RoleQueryConfigurations" type="System.Configuration.NameValueSectionHandler"/>
    <section name="UserQueryConfigurations" type="System.Configuration.NameValueSectionHandler"/>
	  <section name="DepartmentQueryConfigurations" type="System.Configuration.NameValueSectionHandler"/>
	  <section name="DesignationQueryConfigurations" type="System.Configuration.NameValueSectionHandler"/>
    <section name="ModuleQueryConfigurations" type="System.Configuration.NameValueSectionHandler"/>
    <section name="AddressQueryConfiguration" type="System.Configuration.NameValueSectionHandler"/>
    <section name="PhoneQueryConfiguration" type="System.Configuration.NameValueSectionHandler"/>
    <section name="OrganizationQueryConfigurations" type="System.Configuration.NameValueSectionHandler"/>
    <section name="EcommAttributeMasterLogQueryConfigurations" type="System.Configuration.NameValueSectionHandler"/>
    <section name="ControlMasterQueryConfigurations" type="System.Configuration.NameValueSectionHandler"/>
	<section name="UserAttributeValueLogQueryConfigurations" type="System.Configuration.NameValueSectionHandler"/>
    <section name="CustomerQueryConfigurations" type="System.Configuration.NameValueSectionHandler"/>
    
  </configSections>

  <ActionQueryConfigurations>
    <add key="GetAllActionInfo" value="SELECT Id,ActionCode,Description,CreatedOn,CreatedBy,Status FROM common.[Action] WHERE Status=@Status;"></add>
    <add key="GetAllActionInfoById" value="SELECT Id,ActionCode,Description,CreatedOn,CreatedBy,Status FROM common.[Action] WHERE Id=@ActionId AND Status=@Status;"></add>
    <add key="AddActionDetail" value="INSERT INTO common.[Action] (ActionCode,Description,CreatedOn,CreatedBy,Status) VALUES (@ActionCode,@Description,@CreatedOn,@CreatedBy,@Status);"></add>
    <add key="UpdateActionDetail" value="UPDATE common.[Action] SET Description=@Description,Status=@Status WHERE Id=@ActionId"></add>
    <add key="RemoveActionInfo" value="UPDATE common.[Action] SET Status=@Status WHERE Id=@ActionId"></add>
    <add key="AssignActionToRole" value="INSERT INTO common.[Role_Action](RoleId,ActionId,CreatedOn,CreatedBy) VALUES(@RoleId,@ActionId,@CreatedOn,@CreatedBy)"></add>
    <add key="GetAllActionCodePermission" value="SELECT DISTINCT A.Id,A.ActionCode FROM common.[Action] A LEFT OUTER JOIN common.Role_Action RA ON A.Id=RA.ActionId LEFT OUTER JOIN common.Groups_Roles GR ON RA.RoleId=GR.Role_Id LEFT OUTER JOIN common.[Group] GP ON GP.Id = GR.Group_Id LEFT OUTER JOIN common.Groups_Users GU ON GP.Id=GU.Group_Id WHERE GU.User_Id=@UserId AND A.ActionCode in("></add>
    <add key="GetAllActionInfoByUserId" value="SELECT DISTINCT A.Id,A.ActionCode,A.Description,A.Status,A.CreatedOn,A.CreatedBy FROM common.[Action] A LEFT OUTER JOIN common.Role_Action RA ON A.Id=RA.ActionId LEFT OUTER JOIN common.Groups_Roles GR ON RA.RoleId=GR.Role_Id LEFT OUTER JOIN common.[Group] GP ON GP.Id = GR.Group_Id LEFT OUTER JOIN common.Groups_Users GU ON GP.Id=GU.Group_Id WHERE GU.User_Id=@UserId AND A.Status=@Status;"></add>
    <add key="GetAllActioninfoByRoleId" value="SELECT ac.Id, ac.ActionCode,ac.Description,ac.CreatedOn,ac.CreatedBy,ac.ParentId, ac.OrderIndex, null as FlagId FROM common.[Action] ac WHERE NOT EXISTS (SELECT ActionId FROM common.[Role_Action] WHERE ActionId = ac.Id AND RoleId = @RoleId) UNION SELECT ac.Id, ac.ActionCode,ac.Description,ac.CreatedOn,ac.CreatedBy,ac.ParentId, ac.OrderIndex,rr.Id as FlagId FROM common.[Action] ac JOIN common.[Role_Action] rr on ac.Id = rr.ActionId and rr.RoleId = @RoleId Order by ac.OrderIndex;"></add>
    <add key="GetCountbyRoleAndAction" value="SELECT Count(*) as CountRecord FROM common.[Role_Action] roleact WHERE roleact.RoleId = @RoleId and roleact.ActionId = @ActionId;"></add>
    <add key="RemoveActionFromRole" value="Delete From common.[Role_Action] WHERE RoleId = @RoleId and ActionId = @ActionId;"></add>
    <!--<add key="GetAllActionInfoByUserId" value="SELECT DISTINCT A.Id,A.ActionCode,A.Description,A.Status,A.CreatedOn,A.CreatedBy FROM common.[Action] A LEFT OUTER JOIN common.Role_Action RA ON A.Id=RA.ActionId LEFT OUTER JOIN common.Groups_Roles GR ON RA.RoleId=GR.Role_Id LEFT OUTER JOIN common.Groups_Users GU ON GR.Group_Id=GU.Group_Id WHERE GU.User_Id=@UserId AND A.Status=@Status;"></add>-->
    <!--<add key="GetAllActionCodePermission" value="SELECT DISTINCT A.Id,A.ActionCode FROM common.[Action] A LEFT OUTER JOIN common.Role_Action RA ON A.Id=RA.ActionId LEFT OUTER JOIN common.Groups_Roles GR ON RA.RoleId=GR.Role_Id  LEFT OUTER JOIN common.Groups_Users GU ON GR.Group_Id=GU.Group_Id WHERE GU.User_Id=@UserId AND A.ActionCode in("></add>-->
  </ActionQueryConfigurations>
  <ResourceQueryConfigurations>
    <add key="GetResourceInfoById" value="SELECT rs.Id, rs.ModuleId, rs.ResourceCode, up.Id as ResourceTypeId, up.ResourceType, rs.ResourceURL, rs.CreatedOn,rs.Description, us.Name as CreatedBy FROM common.[Resource] rs JOIN common.[Users] us ON rs.CreatedBy = us.Id JOIN common.[ResourceType] up ON up.Id = rs.ResourceType WHERE rs.Id = @ResourceId;"></add>
    <add key="GetResourcesByRole" value="SELECT rc.Id, rc.ResourceCode,rc.Description,rc.CreatedOn,rc.CreatedBy,rc.ParentId,rc.OrderIndex, rc.ResourceURL ,up.ResourceType,up.Id as ResourceTypeId, null as FlagId FROM common.[Resource] rc JOIN common.[ResourceType] up ON up.Id = rc.ResourceType WHERE NOT EXISTS (SELECT ResourceId FROM common.[Roles_Resource] WHERE ResourceId = rc.Id AND RoleId = @RoleId) UNION SELECT rc.Id, rc.ResourceCode,rc.Description,rc.CreatedOn,rc.CreatedBy,rc.ParentId,rc.OrderIndex, rc.ResourceURL ,up.ResourceType,up.Id as ResourceTypeId,rr.Id as FlagId FROM common.[Resource] rc JOIN common.[ResourceType] up ON up.Id = rc.ResourceType JOIN common.[Roles_Resource] rr on rc.Id = rr.ResourceId and rr.RoleId = @RoleId ;"></add>
    <add key="RemoveResourceFromRole" value="Delete From common.[Roles_Resource] WHERE RoleId = @RoleId and ResourceId = @ResourceId;"></add>
    <add key="AddResourceToRole" value="INSERT INTO common.[Roles_Resource] (RoleId,CreatedOn,CreatedBy,ResourceId) VALUES (@RoleId,@CreatedOn,@CreatedBy,@ResourceId)"></add>
    <add key="GetAllResourceByModule" value="select rs.Id,rs.ModuleId,rs.ResourceCode,rs.ResourceType,rs.ResourceURL,rt.ResourceType,us.Name,rt.ResourceType as ResourceTypeName,rs.CreatedOn from common.[Resource] rs join common.ResourceType rt on rs.ResourceType=rt.Id left outer join common.Users us on rs.CreatedBy=us.Id ;"></add>
    <add key="AddResource" value="INSERT into common.Resource(ResourceCode,ResourceType,ResourceURL,CreatedOn,CreatedBy,Description) values(@ResourceCode,@ResourceType,@ResourceURL,@CreatedOn,@CreatedBy,@Description);"></add>
    <add key="UpdateResource" value="UPDATE common.Resource set ResourceCode=@ResourceCode,ResourceType=@ResourceType,ResourceURL=@ResourceURL,Description=@Description WHERE Id=@ResourceId;"></add>
    <add key="GetAllResouceByUserId" value="SELECT  Distinct re.Id,re.ResourceCode,re.ResourceType,re.ResourceURL,re.ModuleId,rt.ResourceType as ResourceTypeName,u.Name,re.CreatedOn from common.Resource re left outer join common.[Roles_Resource] rr on re.Id=rr.ResourceId left outer join common.[Groups_Roles] gr on rr.RoleId=gr.Role_Id left outer join common.[Groups_Users] gu on gr.Group_Id=gu.Group_Id join common.ResourceType rt on re.ResourceType=rt.Id join common.Module mo on re.ModuleId=mo.Id left outer join common.Users u on gu.User_Id=u.Id where gu.User_Id=@UserId and mo.Code=@Module;"></add>
    <add key="GetActionByuserId" value="select Distinct ac.ActionCode from common.[Action] as ac join common.[Role_Action] ra on ac.Id=ra.ActionId join common.Groups_Roles gr on ra.RoleId=gr.Role_Id JOIN common.[Group] gp ON gp.Id = gr.Group_Id join common.[Groups_Users] gu on gp.Id=gu.Group_Id where gu.User_Id=@UserId and ac.Status = 'Active';"></add>
    <add key="GetResourceByUserId" value="SELECT  Distinct re.ResourceCode from common.Resource re left outer join common.[Roles_Resource] rr on re.Id=rr.ResourceId left outer join common.[Groups_Roles] gr on rr.RoleId=gr.Role_Id JOIN common.GroupType gt ON gt.Id = gr.Group_Id JOIN common.[Group] gp ON gp.GroupTypeId = gt.Id left outer join common.[Groups_Users] gu on gp.Id=gu.Group_Id join common.ResourceType rt on re.ResourceType=rt.Id join common.Module mo on re.ModuleId=mo.Id left outer join common.Users u on gu.User_Id=u.Id where  gu.User_Id=@UserId and mo.Code=@Module;"></add>
    <add key="GetCountByRoleAndResource" value="SELECT Count(*) as CountRecord FROM common.[Roles_Resource] rolers WHERE rolers.RoleId = @RoleId and rolers.ResourceId = @ResourceId;"></add>
    <!--<add key="GetActionByuserId" value="select Distinct ac.ActionCode from  common.Action ac join common.[Role_Action] ra on ac.Id=ra.ActionId join common.Groups_Roles gr on ra.RoleId=gr.Role_Id join common.[Groups_Users] gu on gr.Group_Id=gu.Group_Id where gu.User_Id=@UserId and ac.Status = 'Active';"></add>-->
    <!--<add key="GetResourceByUserId" value="SELECT  Distinct re.ResourceCode from common.Resource re left outer join common.[Roles_Resource] rr on re.Id=rr.ResourceId left outer join common.[Groups_Roles] gr on rr.RoleId=gr.Role_Id left outer join common.[Groups_Users] gu on gr.Group_Id=gu.Group_Id join common.ResourceType rt on re.ResourceType=rt.Id join common.Module mo on re.ModuleId=mo.Id left outer join common.Users u on gu.User_Id=u.Id where  gu.User_Id=@UserId and mo.Code=@Module;"></add>-->
  </ResourceQueryConfigurations>
  <RoleQueryConfigurations>
    <add key="GetAllRoleInfo" value="SELECT rs.Id, rs.Name, rs.Description, rs.Status,rs.CreatedOn, us.Name as CreatedBy FROM common.[Roles] rs JOIN common.[Users] us ON rs.CreatedBy = us.Id WHERE rs.Status=@Status order by rs.Name"></add>
    <add key="GetRoleInfoById" value="SELECT rs.Id, rs.Name, rs.Description, rs.Status, rs.CreatedOn, us.Name as CreatedBy FROM common.[Roles] rs JOIN common.[Users] us ON rs.CreatedBy = us.Id WHERE rs.Id = @RoleId"></add>
    <add key="AddRoleDetail" value="INSERT INTO common.Roles (Name,Description,Status,CreatedOn,CreatedBy) VALUES (@Name,@Description,@Status,@CreatedOn,@CreatedBy);"></add>
    <add key="UpdateRoleDetails" value="UPDATE common.Roles SET Name = @Name, Description = @Description, Status = @Status WHERE common.Roles.Id = @RoleId;"></add>
    <add key="RemoveRoleInfo" value="UPDATE common.[Roles] SET Status = @Status where Id = @RoleId"></add>
    <add key="AccessPermissionToRole" value="INSERT INTO common.Roles_Permissions (Role_Id, Permission_Id, CreatedOn, CreatedBy) VALUES (@RoleId,@PermissionId,@CreatedOn,@CreatedBy);"></add>
    <add key="RemovePermissionFromRole" value="DELETE FROM common.Roles_Permissions WHERE Role_Id=@RoleId AND Permission_Id=@PermissionId;"></add>
    <add key="GetRolesAssignedToRolesGroup" value="SELECT Distinct rs.Id, rs.Name, rs.Description, rs.Status, us.Name as CreatedBy FROM common.[Roles] rs JOIN common.[users] us ON rs.CreatedBy = us.Id INNER JOIN common.[Groups_Roles] GR ON rs.Id = GR.Role_Id INNER JOIN common.[Group] GP ON GP.Id = GR.Group_Id WHERE GP.Id = @GroupId and rs.Status = @Status order by rs.Name;"></add>
    <add key="GetRolesByStatus" value="SELECT Id,Name,Description,Status FROM common.Roles WHERE Status = @Status order by Name;"></add>
    <!--<add key="GetRolesAssignedToRolesGroup" value="SELECT rs.Id, rs.Name, rs.Description, rs.Status, us.Name as CreatedBy FROM common.[Roles] rs JOIN common.[users] us ON rs.CreatedBy = us.Id JOIN common.[Groups_Roles] gr ON rs.Id = gr.Role_Id WHERE gr.Group_Id = @GroupId and rs.Status = @Status order by rs.Name;"></add>-->
  </RoleQueryConfigurations>
  <UserGroupQueryConfigurations>
    <add key="GetAllUserGroupInfo" value="SELECT Distinct G.Id,G.Name,G.Description,G.Status,G.CreatedOn,U.Name AS CreatedBy,GT.Id AS GroupTypeId,GT.GroupType FROM common.[Group] G INNER JOIN common.[Users] U ON G.CreatedBy=U.Id INNER JOIN common.GroupType GT ON G.GroupTypeId=GT.Id WHERE G.Status=@Status;"></add>
    <add key="GetRoleLinkedtoGroup" value="SELECT Id FROM [common].[Groups_Roles] Where Group_Id= @groupId  AND Role_Id =@roleId"></add>
    <add key="GetUserLinkedtoGroup" value="SELECT Id FROM [common].[Groups_Users] Where Group_Id = @groupId AND User_Id = @userId"></add>
    <add key="GetAllUserGroupInfoById" value="SELECT Distinct G.Id,G.Name,G.Description,G.Status,G.CreatedOn,U.Name AS CreatedBy from common.[Group] G INNER JOIN common.[Users] U ON G.CreatedBy=U.Id INNER JOIN common.Groups_Roles GR ON G.Id=GR.Group_Id INNER JOIN common.Roles R ON GR.Role_Id=R.Id WHERE G.Id=@GroupId;"></add>
    <add key="GetAllGroupType" value="SELECT DISTINCT UT.Id AS UTId,UT.UserTypeName FROM common.UserTypes UT LEFT OUTER JOIN common.Roles R ON UT.Id=R.UserTypeId LEFT OUTER JOIN common.Groups_Roles GR ON R.Id=GR.Role_Id;"></add>
    <add key="GetAllGroupByTypeStatus" value="SELECT Distinct G.Id,G.Name,G.Description,G.Status,G.CreatedOn,U.Name AS CreatedBy FROM common.[Group] G INNER JOIN common.[Users] U ON G.CreatedBy=U.Id WHERE G.Status=@Status;"></add>
    <add key="getUserByGroup" value="SELECT User_Id FROM common.Groups_Users WHERE Group_Id=@GroupId;"></add>
    <add key="GetActiveUserByGroup" value="SELECT us.Id FROM common.Users us JOIN common.Groups_Users gu ON us.Id = gu.User_Id JOIN common.[UserProfile] up ON up.UserId = us.Id WHERE gu.Group_Id=@GroupId AND us.Status = 'Active';"></add>
    <add key="getRoleByGroup" value="SELECT Role_Id FROM common.Groups_Roles WHERE Group_Id=@GroupId;"></add>
    <add key="GetGroupFolderByGroup" value="SELECT FolderId FROM common.GroupFolders WHERE GroupId=@GroupId;"></add>
    <add key="AddUserGroupDetail" value="INSERT INTO common.[Group] (Name, Description, Status, CreatedOn,CreatedBy) VALUES (@Name,@Description,@Status,@CreatedOn,@CreatedBy) Select @@Identity;"></add>
    <add key="UpdateUserGroupDetail" value="UPDATE common.[Group] SET Name=@Name, Description=@Description WHERE Id=@GroupId;"></add>
    <add key="RemoveUserGroupInfo" value="UPDATE common.[Group] SET Status = @Status WHERE Id = @GroupId;"></add>
    <!--<add key="AddUserToGroup" value="IF NOT EXISTS(SELECT 1 FROM common.Groups_Users WHERE User_Id=@UserId AND Group_Id=@GroupId) INSERT INTO common.Groups_Users (User_Id,Group_Id,CreatedOn,CreatedBy) VALUES (@UserId,@GroupId,@CreatedOn,@CreatedBy);"></add>-->
    <add key="AddUserToGroupCode" value="IF NOT EXISTS(SELECT 1 FROM common.Groups_Users WHERE User_Id=@UserId AND Group_Id=(SELECT Id FROM common.[Group] WHERE Code=@GroupId)) INSERT INTO common.Groups_Users (User_Id,Group_Id,CreatedOn,CreatedBy) VALUES (@UserId,(SELECT Id FROM common.[Group] WHERE Code=@GroupId),@CreatedOn,@CreatedBy);"></add>
    <add key="RemoveUserFromGroup" value="DELETE FROM common.Groups_Users WHERE User_Id=@UserId AND Group_Id=@GroupId;"></add>
    <add key="AddRoleToGroup" value="INSERT INTO common.Groups_Roles (Group_Id,Role_Id,CreatedOn,CreatedBy) VALUES (@GroupId,@RoleId,@CreatedOn,@CreatedBy);"></add>
    <add key="RemoveRoleFromGroup" value="DELETE FROM common.Groups_Roles WHERE Group_Id=@GroupId AND Role_Id=@RoleId;"></add>
    <add key="AddFolderToGroup" value="INSERT Into common.GroupFolders(GroupId,FolderId)values(@GroupId,@FolderId);"></add>
    <add key="GetSumGroupcount" value="Select COUNT(grpCount.username1) as AccessUsers, grpCount.Grouptype from (SELECT typeusers.username username1, max(typeusers.GRPType) as Grouptype from (SELECT distinct U.Name as username,GT.AccessGroupType as GRPType FROM common.Users U INNER JOIN common.Groups_Users GU ON GU.User_Id=U.Id INNER JOIN common.[Group] G ON GU.Group_Id=G.Id INNER JOIN common.GroupType GT ON GT.Id = G.GroupTypeId INNER JOIN common.Groups_Roles GR ON GR.Group_Id =GT.Id INNER JOIN common.Roles R ON R.Id = GR.Role_Id Where R.ModuleId = (Select Id FROM common.Module where Code = @ModuleCode)) as typeusers group by typeusers.username) as grpCount group by grpCount.Grouptype"></add>
    <add key="UpdateUserCounttoType" value="UPDATE common.GroupType SET ActiveUser = @UserCount Where AccessGroupType = @AccessType"></add>
    <add key="AddSuperUserToGroup" value="DECLARE @GroupId INT;SELECT @GroupId = Id FROM Common.[Group] WHERE Name='SuperAdminGroup'; INSERT INTO Common.Groups_Users (User_Id,Group_Id,CreatedOn,CreatedBy) VALUES (@UserId,@GroupId,@CreatedOn,@CreatedBy);"></add>
    <add key="GetAllGroups" value="SELECT Id, Name FROM common.[Group];"></add>
    <add key="GetUserGroups" value="SELECT Id FROM common.Groups_Users WHERE [User_Id]=@UserId AND [Group_Id]=@GroupId;"></add>
    <add key="AddUserToGroup" value="INSERT INTO common.Groups_Users (User_Id,Group_Id,CreatedOn,CreatedBy) VALUES (@UserId,@GroupId,@CreatedOn,@CreatedBy);"></add>
    <!--<add key="GetAllUserGroupInfo" value="SELECT G.Id,G.Name,G.Description,G.Status,M.Code,G.CreatedOn,U.Name AS CreatedBy,GT.Id AS GroupId,GT.GroupType FROM common.[Group] G INNER JOIN common.GroupType GT ON G.GroupTypeId=GT.Id INNER JOIN common.[Users] U ON G.CreatedBy=U.Id INNER JOIN common.Groups_Roles GR ON G.Id=GR.Group_Id INNER JOIN common.Roles R ON GR.Role_Id=R.Id INNER JOIN common.Module M ON R.ModuleId=M.Id WHERE G.Status=@Status AND M.Code=@ModuleCode;"></add>-->
    <!--<add key="GetAllUserGroupInfoById" value="SELECT G.Id,G.Name,G.Description,G.Status,G.CreatedOn,U.Name AS CreatedBy,GT.Id AS GroupId,GT.GroupType from common.[Group] G INNER JOIN common.[GroupType] GT on G.GroupTypeId=gt.Id INNER JOIN common.[Users] U ON G.CreatedBy=U.Id INNER JOIN common.Groups_Roles GR ON G.Id=GR.Group_Id INNER JOIN common.Roles R ON GR.Role_Id=R.Id INNER JOIN common.Module M ON R.ModuleId=M.Id WHERE G.Id=@GroupId;"></add>-->
    <!--<add key="GetAllGroupByTypeStatus" value="SELECT G.Id,G.Name,G.Description,G.Status,G.CreatedOn,GT.Id AS GroupId,GT.GroupType AS GroupType,U.Name AS CreatedBy,M.Name AS ModuleName,M.Code AS ModuleCode FROM common.[Group] G INNER JOIN common.[GroupType] GT ON G.GroupTypeId=GT.Id INNER JOIN common.Groups_Roles GR ON G.Id=GR.Group_Id INNER JOIN common.Roles R ON GR.Role_Id=R.Id INNER JOIN common.Module M ON R.ModuleId=M.Id INNER JOIN common.[Users] U ON G.CreatedBy=U.Id WHERE G.Status=@Status and GT.Id=@Type;"></add>-->
  </UserGroupQueryConfigurations>
  <UserQueryConfigurations>
    <add key="GetGroupUsers" value="SELECT DISTINCT G.Id AS GId,G.Name AS GName,UP.UserId AS UId,REPLACE((ISNULL(UP.FirstName,'') + ' ' + ISNULL(UP.MiddleName,'') + ' ' + ISNULL(UP.LastName,'')),'  ',' ') AS FullName,UP.Email,UP.EmployeeId,D.Id AS DId,D.Designation,U.Status FROM common.[Group] G INNER JOIN common.Groups_Roles GR ON G.Id=GR.Group_Id INNER JOIN common.Roles R ON GR.Role_Id=R.Id INNER JOIN common.Groups_Users GU ON G.Id=GU.Group_Id INNER JOIN common.Users U ON GU.User_Id=U.Id INNER JOIN common.UserProfile UP ON U.Id=UP.UserId LEFT JOIN common.Designation D ON UP.Designation=D.Id WHERE G.Status=@Status AND U.Status=@Status ;"></add>
    <add key="GetUsersByGroupType" value="SELECT DISTINCT UP.UserId,REPLACE((ISNULL(UP.FirstName,'') + ' ' + ISNULL(UP.MiddleName,'') + ' ' + ISNULL(UP.LastName,'')),'  ',' ') AS Name,UP.EmployeeId,UP.Image,DM.Id AS DepartmentId,DM.Name AS Department,DS.Id AS DesignationId,DS.Designation FROM common.[Group] G INNER JOIN common.Groups_Roles GR ON G.Id=GR.Group_Id INNER JOIN common.Roles R ON GR.Role_Id=R.Id INNER JOIN common.Groups_Users GU ON G.Id=GU.Group_Id INNER JOIN common.Users U ON GU.User_Id=U.Id INNER JOIN common.UserProfile UP ON U.Id=UP.UserId LEFT JOIN common.Department DM ON UP.Department=DM.Id LEFT JOIN common.Designation DS ON UP.Designation=DS.Id WHERE U.Status=@Status;"></add>
    <add key="GetAllAgencyInfo" value="Select cm.Id, cm.Code, cm.CompanyName, cm.DBServerName, cm.DBName, cm.DBUserName, cm.DBPassword  from [Company] cm;" />
    <add key="GetUserInfoById" value="SELECT us.Id, us.Name, up.FirstName, up.LastName, up.MiddleName, up.Email, up.Phone, up.Address1, up.Address2, up.City, up.State, c.Id as countryId,c.Name as countryName, c.ThreeLetterIsoCode as CountryCode, up.Zipcode, us.Status, us.ExpiresOn, us.CreatedOn, u.Name as CreatedBy, up.Image, up.JobProfile, up.Accomplishments, up.DisplayOrderIndex, up.Hobbies, up.DOB,UT.Id AS UTId,UT.UserTypeName,dt.Id as DepartmentId, dt.Name as Department, ds.Id as DesignationId, ds.Designation, repo.UserId as ReportingToId, repo.Email as ReportingTo, up.JoiningDate, up.TotalYrsExp, us.IsSuperUser from common.[Users] us JOIN common.[UserProfile] up ON up.UserId = us.Id LEFT OUTER JOIN common.[UserProfile] repo ON up.ReportingTo=repo.UserId JOIN common.[Users] u ON Us.CreatedBy = u.Id LEFT OUTER JOIN common.Department dt ON dt.Id = up.Department LEFT OUTER JOIN common.Designation ds ON ds.Id = up.Designation LEFT OUTER JOIN common.UserTypes UT ON UP.UserTypeId=UT.Id INNER JOIN Country c on c.Id = up.Country WHERE us.Id = @UserId;" />
    <add key="GetUserImagebyId" value=" SELECT Image FROM [common].[UserProfile] WHERE UserId = @UserID"></add>
    <add key="getGroupByUserId" value="SELECT g.Id,g.Name from common.[Group] g JOIN common.[Groups_Users] gu ON g.Id=gu.Group_Id WHERE gu.User_Id = @UserId;"></add>
    <add key="AddUserDetail" value="INSERT INTO common.Users (Name, Password, Status, ExpiresOn, CreatedOn, CreatedBy, Salt, IsFirstLogin, IsSuperUser,UserType) VALUES (@Username,@Password,@Status,@ExpiryOn,@CreatedOn,@CreatedBy,@Salt,@IsFirstLogin,@IsSuperUser,(SELECT Id FROM [common].[UserTypes] where UserType=@UserType)); Select @@Identity;"></add>
    <add key="VerifyUserWithModule" value="SELECT U.Id FROM common.Users U INNER JOIN common.Groups_Users GU ON U.Id=GU.User_Id INNER JOIN common.Groups_Roles GR ON GU.Group_Id=GR.Group_Id INNER JOIN common.Roles R ON GR.Role_Id=R.Id WHERE U.Name=@UserName;"></add>
    <add key="VerifyUser" value="SELECT Users.Id FROM common.Users WHERE Users.Name=@UserName;"></add>
    <add key="GetCompanyCode" value="SELECT Code FROM Company C JOIN UserCompany UC ON C.Id=UC.CompamyId JOIN ControlUsers CU ON UC.UserId=CU.Id WHERE CU.Email='{0}';"></add>
    <add key="GetUserDetails" value="SELECT us.Id, us.Name, up.FirstName, up.LastName, up.MiddleName, up.Email, up.Phone, up.Address1, up.Address2, up.City, up.State, c.Id as countryId,c.Name as countryName, c.ThreeLetterIsoCode as countryCode, up.Zipcode, us.Status, us.ExpiresOn, us.CreatedOn, u.Name AS CreatedBy, up.Image ,up.JobProfile, up.Accomplishments, up.DisplayOrderIndex   FROM [Common].[Users] us JOIN [Common].[Users] u ON Us.CreatedBy = u.Id JOIN common.[UserProfile] up ON up.UserId = us.Id JOIN Common.UserModule um ON us.Id = um.UserId INNER JOIN Country c on c.Id = up.Country WHERE us.IsSuperUser=@IsSuperUser and Us.[Status]=@Status ORDER BY up.FirstName, up.LastName;" />
    <add key="AddUserProfileDetail" value="INSERT INTO common.[UserProfile] (UserId,FirstName,LastName,Email,Phone,Address1,Address2,City,
              State,Country,Zipcode,Image,TotalYrsExp,DOB,Hobbies,JoiningDate,EmployeeId, JobProfile, 
              Accomplishments,UserTypeId) VALUES (@UserId,@FirstName,@LastName,@Email,@Phone,@Address1,@Address2,@City,@State,@Country,@Zipcode,
              @FileName,@TotalYrsExp,@DOB,@Hobbies,@JoiningDate,@EmployeeId, @JobProfile, @Accomplishments,(SELECT Id FROM [common].[UserTypes] where UserType=@UserType) )
              ;Select @@Identity;">
    </add>
    <!--<add key="VerifyUserControl" value="SELECT Id FROM ControlUsers WHERE Email=@Email;"></add>-->
    <add key="AddUserControlDetail" value="INSERT INTO [ControlUsers]([Email],[Password],[Status],[ExpiresOn],[CreatedOn],[CreatedBy],[Salt],[IsFirstLogin], [FirstName],[LastName],[Phone],[Image])VALUES(@Email,@Password,@Status,@ExpiresOn,@CreatedOn,@CreatedBy,@Salt, @IsFirstLogin,@FirstName,@LastName,@Phone,@Image) SELECT @@IDENTITY;"></add>
    <add key="GetUserCompany" value=" select u.Id from UserCompany u where UserId=@UserControlId and u.CompamyId=(Select c.Id from Company c where Code=@CompanyCode)"></add>
    <add key="AddUserCompanyDetail" value="INSERT INTO UserCompany(UserId,CompamyId)VALUES(@UserControlId,(SELECT Id FROM Company WHERE Code=@CompanyCode));"></add>
    <add key="UpdateControlUser" value="UPDATE dbo.ControlUsers SET FirstName=@FirstName , LastName=@LastName, Phone=@Phone, [Image]=@Image WHERE Email=@Email;"></add>
    <add key="UpdateUserProfileDetailWithImage" value="UPDATE common.[UserProfile] SET FirstName=@FirstName,LastName=@LastName,Email=@Email,Phone=@Phone,Address1=@Address1,Address2=@Address2,City=@City,State=@State,Country=@Country,Zipcode=@Zipcode,Image=@FileName, ReportingTo = @ReportingTo, TotalYrsExp = @TotalYrsExp, DOB=@DOB,Hobbies = @Hobbies, JoiningDate = @JoiningDate, Department = @Department, Designation = @Designation,EmployeeId = @EmployeeId, JobProfile = @JobProfile, Accomplishments = @Accomplishments WHERE UserId =@UserId;"></add>
    <add key="UpdateUserProfileDetail" value="UPDATE common.[UserProfile] SET FirstName='{1}',LastName='{2}',MiddleName='{3}',Email='{4}',Phone='{5}',Address1='{6}',Address2='{7}',City='{8}',State='{9}',Country='{10}',Zipcode='{11}' WHERE common.[UserProfile].UserId ={0};"></add>
    <add key="UpdateUserStatus" value="UPDATE common.Users SET Status=@Status WHERE Id = @UserId;"></add>
    <add key="GetUserByStatus" value="SELECT DISTINCT US.Id,US.Name,US.Status,US.ExpiresOn,US.CreatedOn,U.Name AS CreatedBy,UP.FirstName,UP.LastName,UP.MiddleName,UP.Email,UP.Phone,UP.Address1,UP.Address2,UP.City,UP.State,UP.Country,UP.Zipcode,UP.Image,UP.JobProfile,UP.Accomplishments,UP.DisplayOrderIndex,UP.EmployeeId,UT.Id AS UTId,UT.UserTypeName,ds.Id as DesignationId, ds.Designation FROM common.[Users] US INNER JOIN common.[Users] U ON US.CreatedBy = u.Id INNER JOIN common.[UserProfile] UP ON UP.UserId = US.Id INNER JOIN common.Groups_Users GU ON U.Id=GU.User_Id LEFT OUTER JOIN common.Designation ds ON ds.Id = up.Designation INNER JOIN common.[Group] GP ON GP.Id = GU.Group_Id INNER JOIN common.Groups_Roles GR ON GP.Id=GR.Group_Id INNER JOIN common.Roles R ON GR.Role_Id=R.Id LEFT OUTER JOIN common.UserTypes UT ON UP.UserTypeId=UT.Id WHERE US.Status=@Status ORDER BY UP.FirstName,UP.LastName;" />
    <add key="GetUserByEmail" value="SELECT us.Id, us.Name, up.FirstName, up.Email, u.Name as CreatedBy, us.Salt, us.Password, us.IsFirstLogin, us.ExpiresOn FROM common.[Users] us JOIN common.[Users] u ON Us.CreatedBy = u.Id JOIN common.UserProfile up ON us.Id = up.UserId WHERE us.Name = @Email;"></add>
    <add key="GetControlUserByEmail" value="SELECT u.Id,  u.Email as Name, u.FirstName, u.Email, c.Email as CreatedBy, u.Salt, u.Password, u.IsFirstLogin, u.ExpiresOn FROM ControlUsers u INNER JOIN ControlUsers c ON c.Id = u.CreatedBy WHERE u.Email = @Email;"></add>
    <add key="ResetPassword" value="UPDATE common.[Users] SET Password=@Password,Salt=@Salt,ExpiresOn=@ExpireOn,IsFirstLogin=@IsFirstLogin, PasswordResetCode=null, PasswordResetCodeExpiresOn=null WHERE Id = @UserId;
         INSERT INTO common.ActivitiesLog ( Activity, UserId, [Message], CreatedOn, IPAddress)
VALUES ('CHANGEPASSWORD', @UserId, 'CHANGEPASSWORD', GETDATE(), NULL)"></add>
    <add key="RemoveUsersInfo" value="UPDATE common.[Users] set Status = @Status WHERE Id = @UserId;"></add>
    <add key="MovingUserToAnotherGroup" value="UPDATE common.Groups_Users SET Group_Id = @NewGroupId WHERE User_Id=@UserId AND Group_Id=@ExistGroupId;"></add>
    <add key="GetUsersOfExpiredAccount" value="SELECT US.Id,US.Name,US.Status,US.ExpiresOn,US.CreatedOn,U.Name AS CreatedBy,UP.FirstName,UP.LastName,UP.MiddleName,UP.Email,UP.Phone,UP.Address1,UP.Address2,UP.City,UP.State,UP.Country,UP.Zipcode,UP.Image,UP.JobProfile,UP.Accomplishments,UP.DisplayOrderIndex FROM common.[Users] US INNER JOIN common.Users U ON US.CreatedBy = U.Id INNER JOIN common.[UserProfile] UP ON UP.UserId = US.Id INNER JOIN common.Groups_Users GU ON U.Id=GU.User_Id INNER JOIN common.[Group] GP ON GP.Id = GU.Group_Id INNER JOIN common.Groups_Roles GR ON GP.Id=GR.Group_Id INNER JOIN common.Roles R ON GR.Role_Id=R.Id WHERE US.ExpiresOn >= @Today AND US.ExpiresOn &lt;= @ExpiryDate AND US.Status=@Status;"></add>
    <add key="GetUsersAssignedtoUsersGroup" value="SELECT us.Id, us.Name, up.FirstName, up.LastName, us.ExpiresOn, us.Status, u.Name as CreatedBy,ds.Id as DesignationId, ds.Designation, up.EmployeeId	from common.[Users] us JOIN common.[UserProfile] up ON up.UserId = us.Id LEFT OUTER JOIN common.[UserProfile] repo ON up.ReportingTo=repo.UserId JOIN common.[Users] u ON Us.CreatedBy = u.Id LEFT OUTER JOIN common.Designation ds ON ds.Id = up.Designation	JOIN common.[Groups_Users] gu ON us.Id = gu.User_Id where gu.Group_Id = @GroupId and us.Status = @Status"></add>
    <add key="GetUsersAssignedToRole" value="SELECT DISTINCT u.Id, u.Name, u.Status, u.ExpiresOn, us.Name as CreatedBy FROM common.Users us INNER JOIN common.Users u ON u.CreatedBy=us.Id JOIN common.Groups_Users gu ON u.Id=gu.User_Id JOIN common.[Group] GP ON GP.Id = gu.Group_Id JOIN common.Groups_Roles GR ON GP.Id=GR.Group_Id WHERE gr.Role_Id=@RoleId AND u.Status=@Status;"></add>
    <add key="GetIPConfig" value="SELECT IPAddress FROM common.[IPConfig]"></add>
    <add key="GetAgencyInfo" value="SELECT DISTINCT comp.Id,comp.CompanyName,comp.Code FROM Company comp JOIN UserCompany userComp ON comp.Id=userComp.CompamyId JOIN  ControlUsers conUser ON userComp.UserId=conUser.Id WHERE conUser.Email=@Username;"></add>
    <add key="GetCompanyId" value="SELECT TOP 1 comp.CompamyId FROM ControlUsers conUser JOIN UserCompany comp ON conUser.Id = comp.UserId WHERE conUser.Email=@Username;"></add>
    <add key="GetUserInfo" value="SELECT Id,Name,Password,Status,Salt,IsFirstLogin,AccessRestriction FROM common.Users WHERE Name=@Username;"></add>
    <add key="GetCompanyInfo" value="SELECT cm.Id, cm.Code, cm.CompanyName, cm.DBServerName, cm.DBName, cm.DBUserName, cm.DBPassword, cm.AuthMode FROM Company cm WHERE cm.Code=@Code;"></add>
    <add key="GetFolder" value="SELECT DISTINCT FolderId FROM Leasing.LeaseFolder WHERE LeaseId=@LeaseId;"></add>
    <add key="GetModule" value="SELECT DISTINCT M.Id,M.Code FROM common.Module M INNER JOIN common.Roles R ON M.Id=R.ModuleId INNER JOIN common.Groups_Roles GR ON R.Id=GR.Role_Id INNER JOIN common.GroupType GT ON GT.Id = GR.Group_Id INNER JOIN common.[Group] G ON G.GroupTypeId = GT.Id INNER JOIN common.Groups_Users GU ON GU.Group_Id = G.Id WHERE GU.User_Id=@UserId;"></add>
    <add key="GetUserContext" value="SELECT u.Name,up.FirstName,up.LastName,up.Address1,up.Address2,up.City,up.State,up.Zipcode,up.Email,up.Phone,u.IsFirstLogin,u.Status,u.ExpiresOn,up.Image FROM common.UserProfile up JOIN common.Users u ON up.UserId=u.Id WHERE u.Id=@UserId;"></add>
    <add key="GetGroups" value="SELECT DISTINCT g.Name FROM common.[Group] g JOIN common.Groups_Users gu ON g.Id=gu.Group_Id WHERE gu.User_Id = @UserId AND g.Status = 'Active';"></add>
    <add key="GetRoles" value="SELECT DISTINCT r.Name FROM common.Roles r JOIN common.Groups_Roles gr ON r.Id=gr.Role_Id JOIN common.Groups_Users gu ON gr.Group_Id=gu.Group_Id WHERE gu.User_Id=@UserId AND r.Status='Active';"></add>
    <add key="GetFolders" value="SELECT DISTINCT f.Id,f.Folder FROM Leasing.Folder f JOIN common.GroupFolders gf ON f.Id=gf.FolderId JOIN common.[Group] g ON gf.GroupId=g.Id JOIN common.Groups_Users gu ON g.Id=gu.Group_Id WHERE gu.User_Id=@UserId AND g.GroupTypeId=@GroupType AND g.Status='Active';"></add>
    <add key="VerifyUserControl" value="SELECT Id FROM Common.Users WHERE Name=@Email;"></add>
    <add key="GetToken" value="SELECT UserId,Email,Token,TokenExpiry,TokenDuration,Status,CompanyCode,ModuleCode,IPAddress FROM UserToken WHERE Token = @Token and IpAddress=@IPAddress"></add>
    <add key="UpdateToken" value="UPDATE UserToken SET TokenExpiry=DATEADD(MINUTE,@ExtendTime,GETDATE()) WHERE Token = @Token and IPAddress=@IPAddress"></add>
    <add key="GetActions" value="SELECT ua.ActionCode FROM UserToken AS ut JOIN UserActions AS ua ON ut.UserId = ua.UserId WHERE ut.Token=@Token"></add>
    <add key="GetUsersList" value="SELECT DISTINCT UP.UserId,REPLACE((ISNULL(UP.FirstName,'') + ' ' + ISNULL(UP.MiddleName,'') + ' ' + ISNULL(UP.LastName,'')),'  ',' ') AS Name,UP.EmployeeId,UP.Image,DM.Id AS DepartmentId,DM.Name AS Department,DS.Id AS DesignationId,DS.Designation FROM common.UserProfile UP INNER JOIN common.Users U ON UP.UserId=U.Id LEFT JOIN common.Department DM ON UP.Department=DM.Id LEFT JOIN common.Designation DS ON UP.Designation=DS.Id INNER JOIN common.Groups_Users GU ON U.Id=GU.User_Id INNER JOIN common.Groups_Roles GR ON GU.Group_Id=GR.Group_Id INNER JOIN common.Roles R ON GR.Role_Id=R.Id WHERE U.Status=@Status;"></add>
    <add key="GetUserTypes" value="SELECT UT.Id AS UTId,UT.UserType,UT.UserTypeName,UT.AccessType,UT.Status,ET.Id AS ETId,ET.EntityType FROM common.UserTypes UT LEFT OUTER JOIN common.EntityTypes ET ON UT.EntityTypeId=ET.Id;"></add>
    <add key="GetEntityTypes" value="SELECT ET.Id AS ETId,ET.EntityType FROM common.EntityTypes ET;"></add>
    <add key="GetEntityTypeByMetadata" value="SELECT MSC.Id,MSC.Name FROM Workflow.MetadataSetConfig MSC INNER JOIN Workflow.MetaDataConfig MDC ON MSC.Id=MDC.LookupId WHERE MDC.Id=@MetadataId;"></add>
    <add key="GetUserByEntity" value="SELECT DISTINCT UP.UserId,REPLACE((ISNULL(UP.FirstName,'') + ' ' + ISNULL(UP.MiddleName,'') + ' ' + ISNULL(UP.LastName,'')),'  ',' ') AS Name FROM common.UserProfile UP INNER JOIN common.UserEntity UE ON UP.UserId=UE.UserId WHERE UE.EntityTypeId=@EntityTypeId AND UE.EntityId=@EntityId;"></add>
    <add key="AddUserEntity" value="INSERT INTO common.UserEntity(UserId,EntityTypeId,EntityId)VALUES(@UserId,@EntityTypeId,@EntityId);"></add>
    <add key="RemoveUserEntity" value="DELETE FROM common.UserEntity WHERE UserId=@UserId AND EntityTypeId=@EntityTypeId AND EntityId=@EntityId;"></add>
    <add key="GetEntityTypeByUserType" value="SELECT ET.Id,ET.EntityType FROM common.EntityTypes ET INNER JOIN common.UserTypes UT ON ET.Id=UT.EntityTypeId WHERE UT.Id=@UserTypeId;"></add>
    <!--<add key="GetAllUserDetailsByOrg" value="SELECT us.Id, us.Name, up.FirstName, up.LastName, up.MiddleName, up.Email, up.Phone, up.Address1, up.Address2, up.City, up.State, up.Country, up.Zipcode, us.Status, us.ExpiresOn, us.CreatedOn, u.Name AS CreatedBy, up.Image ,up.JobProfile, up.Accomplishments, up.DisplayOrderIndex , ph.PhoneNumber as PhoneNumber FROM [Common].[Users] us JOIN [Common].[Users] u ON Us.CreatedBy = u.Id JOIN [Common].[UserProfile] up ON up.UserId = us.Id JOIN [Common].UserModule um ON us.Id = um.UserId JOIN  OrganizationUsers AS OrgUser on OrgUser.UserId = Us.Id join Organization as Org on Org.Id = OrgUser.OrganizationId  join [Common].Phone as ph on ph.ContactId = us.Id  WHERE us.IsSuperUser=0  and Org.OrgGUID=@OrgGUID and ph.ContactType='user' and ph.IsPrimary=1 ORDER BY up.FirstName, up.LastName;" />-->
    <add key="GetAllUserDetailsByOrg" value="SELECT us.Id, us.Name, up.FirstName, up.LastName, up.MiddleName, up.Email, up.Phone, up.Address1, up.Address2, up.City, up.State, c.Id as countryId,c.Name as countryName, c.ThreeLetterIsoCode as CountryCode, up.Zipcode, us.Status, us.ExpiresOn, us.CreatedOn, u.Name AS CreatedBy, up.Image ,up.JobProfile, up.Accomplishments, up.DisplayOrderIndex FROM [Common].[Users] us JOIN [Common].[Users] u ON Us.CreatedBy = u.Id JOIN [Common].[UserProfile] up ON up.UserId = us.Id JOIN [Common].UserModule um ON us.Id = um.UserId JOIN  OrganizationUsers AS OrgUser on OrgUser.UserId = Us.Id join Organization as Org on Org.Id = OrgUser.OrganizationId INNER JOIN Country c on c.Id = up.Country WHERE us.IsSuperUser=0  and Org.OrgGUID=@OrgGUID ORDER BY up.FirstName, up.LastName;" />
    <add key="GetUsersLog" value="SELECT UL.Id,UL.IPAddress,UL.CreatedOn,UP.UserId,REPLACE((ISNULL(UP.FirstName,'') + ' ' + ISNULL(UP.MiddleName,'') + ' ' + ISNULL(UP.LastName,'')),'  ',' ') AS FullName,UP.Image,D.Id AS DId,D.Designation,UAT.Id AS UATId,UAT.Name AS UATName FROM common.UserLogs UL INNER JOIN common.UserActivityTypes UAT ON UL.ActivityTypeId=UAT.Id INNER JOIN common.UserProfile UP ON UL.UserId=UP.UserId LEFT JOIN common.Designation D ON UP.Designation=D.Id WHERE UL.UserId=COALESCE(NULLIF(@User, ''), UL.UserId) OR UAT.Name=COALESCE(NULLIF(@ActivityType, ''), UAT.Name);"></add>
    <add key="AddUsersLog" value="INSERT INTO common.UserLogs(UserId,ActivityTypeId,IPAddress,CreatedBy)VALUES(@User,(SELECT Id FROM common.UserActivityTypes WHERE Code=@ActivityType),@IPAddress,@CreatedBy);"></add>
    <add key="GetAllUserDetails" value="SELECT us.Id, us.Name, up.FirstName, up.LastName, up.MiddleName, up.Email, up.Phone, up.Address1, up.Address2, up.City, up.State, c.Id as countryId,c.Name as countryName, c.ThreeLetterIsoCode as countryCode, up.Zipcode, us.Status, us.ExpiresOn, us.CreatedOn, u.Name AS CreatedBy, up.Image ,up.JobProfile, up.Accomplishments, up.DisplayOrderIndex FROM [Common].[Users] us JOIN [Common].[Users] u ON Us.CreatedBy = u.Id JOIN [Common].[UserProfile] up ON up.UserId = us.Id JOIN [Common].UserModule um ON us.Id = um.UserId INNER JOIN Country c on c.Id = up.Country WHERE us.IsSuperUser=@IsSuperUser ORDER BY up.FirstName, up.LastName;" />
    <add key="GetUserDetailsByOrg" value="SELECT us.Id, us.Username as Name, up.FirstName, up.LastName, up.MiddleName, up.Email,us.Status, us.ExpiresOn, us.CreatedOn, '' AS CreatedBy, up.Image,
              ph.PhoneNumber as PhoneNumber 
              FROM [Common].[Users] us 
              JOIN [Common].[UserProfile] up ON up.CustomerId = us.Id 
              JOIN [Common].UserModule um ON us.Id = um.UserId 
              JOIN  OrganizationUsers AS OrgUser on OrgUser.UserId = Us.Id 
              join Organization as Org on Org.Id = OrgUser.OrganizationId  
              join [Common].Phone as ph on ph.ContactId = us.Id  
              WHERE us.IsSuperUser=0 and Us.[Status]=@Status and Org.OrgGUID=@OrgGUID and ph.ContactType='user' and ph.IsPrimary=1 ORDER BY up.FirstName, up.LastName;" >
    </add>
    <add key="GetUserInstance" value="SELECT Instance_Id FROM Common.Users_Instance WHERE [User_Id]=@UserId and Instance_Id=@InstanceId;"></add>
    <add key="LinkUserToInstance" value="INSERT INTO [Common].[Users_Instance]([User_Id],[Instance_Id])VALUES(@UserId, @InstanceId);"></add>
    <add key="GetUserOrganisation" value="SELECT ou.OrganizationId FROM Common.Users AS us JOIN OrganizationUsers AS ou ON us.Id = ou.UserId WHERE ou.UserId=@UserId AND ou.OrganizationId=(select Id from Organization where OrgGUID=@OrgGuid);"></add>
    <add key="LinkUserToOrganisation" value="INSERT INTO [dbo].[OrganizationUsers]([OrganizationId],[UserId]) SELECT Id, @UserId FROM Organization WHERE OrgGUID=@OrgGUID;"></add>
    <add key="VerifyUserModule" value="SELECT Id FROM Common.UserModule WHERE UserId=@UserId AND ModuleId=(SELECT Id FROM Common.Module WHERE Code=@ModuleCode);"></add>
    <add key="GetOrganisationByUserId" value="  select Org.OrgGUID from Organization as Org join OrganizationUsers as OrgUser on Org.Id = OrgUser.OrganizationId where OrgUser.UserId=@UserId;"></add>
    <!--<add key="GetAllUserInfo" value="SELECT us.Id, us.Name, up.FirstName, up.LastName, up.MiddleName, up.Email, up.Phone, up.Address1, up.Address2, up.City, up.State, up.Country, up.Zipcode, us.Status, us.ExpiresOn, us.CreatedOn, u.Name as CreatedBy from [Users] us JOIN [Users] u ON Us.CreatedBy = u.Id JOIN [UserProfile] up ON up.UserId = us.Id;" />-->
    <!--<add key="GetUserInfoById" value="SELECT us.Id, us.Name, up.FirstName, up.LastName, up.MiddleName, up.Email, up.Phone, up.Address1, up.Address2, up.City, up.State, up.Country, up.Zipcode, us.Status, us.ExpiresOn, us.CreatedOn, u.Name as CreatedBy, up.Image, up.JobProfile, up.Accomplishments, up.DisplayOrderIndex, up.Hobbies, up.DOB,dt.Id as DepartmentId, dt.Name as Department, ds.Id as DesignationId, ds.Designation, repo.UserId as ReportingToId, repo.Email as ReportingTo, up.JoiningDate, up.TotalYrsExp from common.[Users] us JOIN common.[UserProfile] up ON up.UserId = us.Id LEFT OUTER JOIN common.[UserProfile] repo ON repo.UserId = us.Id JOIN common.[Users] u ON Us.CreatedBy = u.Id LEFT OUTER JOIN common.Department dt ON dt.Id = up.Department LEFT OUTER JOIN common.Designation ds ON ds.Id = up.Designation WHERE us.Id = @UserId;" />-->
    <!--<add key="getGroupByUserId" value="SELECT g.Id, g.GroupTypeId from common.[Group] g JOIN common.[Groups_Users] gu ON g.Id=gu.Group_Id WHERE gu.User_Id = @UserId;"></add>-->
    <!--<add key="GetEntityTypeByUser" value="SELECT ET.EntityType FROM common.EntityTypes ET INNER JOIN common.UserEntity UE ON ET.Id=UE.EntityTypeId WHERE UE.UserId=@UserId;"></add>-->
    <!--<add key="GetActions" value="SELECT DISTINCT a.ActionCode FROM common.[Action] a JOIN Leasing.Role_Action ra ON a.Id=ra.ActionId JOIN common.Groups_Roles gr ON ra.RoleId=gr.Role_Id JOIN common.Groups_Users gu ON gr.Group_Id=gu.Group_Id WHERE gu.User_Id=@UserId AND a.Status='Active';"></add>-->
    <!--<add key="AddUserDetail" value="INSERT INTO common.Users (Name) VALUES (@Username) Select @@Identity;"></add>-->
    <add key="GetUserDetailsByEmail" value="SELECT us.Id,us.Name,up.FirstName,up.Email,us.Salt,us.Status,us.IsFirstLogin,us.IsSuperUser FROM common.Users us JOIN common.UserProfile up ON US.Id=UP.UserId WHERE ltrim(rtrim(us.Name))=@Email;"></add>
    <!--<add key="VerifyUserModule" value="SELECT Id FROM common.UserModule WHERE UserId=@UserId AND ModuleId=(SELECT Id FROM common.Module WHERE Code=@ModuleCode);"></add>-->
    <!--<add key="GetUserDetailsBySalt" value="SELECT us.Id,us.Name,up.FirstName,up.Email,us.ExpiresOn,us.Salt,us.Status,us.IsFirstLogin,us.IsSuperUser FROM common.Users us JOIN common.UserProfile up ON us.Id=up.UserId WHERE PasswordResetCode=@passwordresetcode and PasswordResetCodeExpiresOn &lt;= getdate()"></add>-->
    <add key="GetUserDetailsByPasswordResetCode" value="SELECT us.Id,us.Name,up.FirstName,up.Email,us.ExpiresOn,us.Salt,us.Status,us.IsFirstLogin,us.IsSuperUser FROM common.Users us JOIN common.UserProfile up ON us.Id=up.UserId WHERE PasswordResetCode=@passwordresetcode and PasswordResetCodeExpiresOn &lt;= getdate()"></add>
    <add key="AddUserModuleDetail" value="INSERT INTO common.UserModule(UserId,ModuleId) VALUES(@UserId, (SELECT Id FROM common.Module WHERE Code=@ModuleCode));"></add>
    <!--<add key="AddUserControlDetail" value="INSERT INTO ControlUsers(Email)VALUES(@Email) SELECT @@IDENTITY;"></add>-->
    <!--<add key="UpdateUserDetail" value="UPDATE Users SET Status='{2}', ExpiresOn='{3}' WHERE users.Id={4};"></add>-->
    <!--<add key="UpdateUserProfileDetailWithImage" value="UPDATE common.[UserProfile] SET FirstName=@FirstName,LastName=@LastName,Email=@Email,Phone=@Phone,Address1=@Address1,Address2=@Address2,City=@City,State=@State,Country=@Country,Zipcode=@Zipcode,Image=@FileName WHERE UserId =@UserId;"></add>-->
    <!--Before GroupType Link-->
    <!--<add key="GetUserByStatus" value="SELECT DISTINCT US.Id,US.Name,US.Status,US.ExpiresOn,US.CreatedOn,U.Name AS CreatedBy,UP.FirstName,UP.LastName,UP.MiddleName,UP.Email,UP.Phone,UP.Address1,UP.Address2,UP.City,UP.State,UP.Country,UP.Zipcode,UP.Image,UP.JobProfile,UP.Accomplishments,UP.DisplayOrderIndex FROM common.[Users] US INNER JOIN common.[Users] U ON US.CreatedBy = u.Id INNER JOIN common.[UserProfile] UP ON UP.UserId = US.Id INNER JOIN common.Groups_Users GU ON U.Id=GU.User_Id INNER JOIN common.Groups_Roles GR ON GU.Group_Id=GR.Group_Id INNER JOIN common.Roles R ON GR.Role_Id=R.Id WHERE US.Status=@Status AND R.ModuleId=(SELECT Id FROM common.Module where Code=@ModuleCode) ORDER BY UP.FirstName,UP.LastName;" />-->
    <!--Before GroupType Link-->
    <!--<add key="GetUserByStatus" value="SELECT DISTINCT US.Id,US.Name,US.Status,US.ExpiresOn,US.CreatedOn,U.Name AS CreatedBy,UP.FirstName,UP.LastName,UP.MiddleName,UP.Email,UP.Phone,UP.Address1,UP.Address2,UP.City,UP.State,UP.Country,UP.Zipcode,UP.Image,UP.JobProfile,UP.Accomplishments,UP.DisplayOrderIndex FROM common.[Users] US INNER JOIN common.[Users] U ON US.CreatedBy = u.Id INNER JOIN common.[UserProfile] UP ON UP.UserId = US.Id INNER JOIN common.Groups_Users GU ON U.Id=GU.User_Id INNER JOIN common.[Group] GP ON GP.Id = GU.Group_Id INNER JOIN common.GroupType GT ON GT.Id = GP.GroupTypeId INNER JOIN common.Groups_Roles GR ON GT.Id=GR.Group_Id INNER JOIN common.Roles R ON GR.Role_Id=R.Id WHERE US.Status=@Status AND R.ModuleId=(SELECT Id FROM common.Module where Code=@ModuleCode) ORDER BY UP.FirstName,UP.LastName;" />-->
    <!--<add key="ResetPassword" value="UPDATE common.Users SET Password=@Password,Salt=@Salt,ExpiresOn=@ExpireOn,IsFirstLogin=@IsFirstLogin WHERE Users.Id = @UserId;"></add>-->
    <!--<add key="GetUsersOfExpiredAccount" value="SELECT US.Id,US.Name,US.Status,US.ExpiresOn,US.CreatedOn,U.Name AS CreatedBy,UP.FirstName,UP.LastName,UP.MiddleName,UP.Email,UP.Phone,UP.Address1,UP.Address2,UP.City,UP.State,UP.Country,UP.Zipcode,UP.Image,UP.JobProfile,UP.Accomplishments,UP.DisplayOrderIndex FROM common.[Users] US INNER JOIN common.Users U ON US.CreatedBy = U.Id INNER JOIN common.[UserProfile] UP ON UP.UserId = US.Id INNER JOIN common.Groups_Users GU ON U.Id=GU.User_Id INNER JOIN common.Groups_Roles GR ON GU.Group_Id=GR.Group_Id INNER JOIN common.Roles R ON GR.Role_Id=R.Id WHERE US.ExpiresOn >= @Today AND US.ExpiresOn &lt;= @ExpiryDate AND US.Status=@Status AND R.ModuleId=(SELECT Id FROM common.Module where Code=@Module);"></add>-->
    <!--<add key="GetUsersAssignedtoUsersGroup" value="SELECT us.Id, us.Name, us.ExpiresOn, us.Status, u.Name as CreatedBy from common.[Users] us JOIN common.[Users] u ON Us.CreatedBy = u.Id JOIN common.[Groups_Users] gu ON us.Id = gu.User_Id where gu.Group_Id = @GroupId and us.Status = @Status;"></add>-->
    <!--<add key="GetUsersAssignedToRole" value="SELECT DISTINCT u.Id, u.Name, u.Status, u.ExpiresOn, us.Name as CreatedBy FROM common.Users us INNER JOIN common.Users u ON u.CreatedBy=us.Id JOIN common.Groups_Users gu ON u.Id=gu.User_Id JOIN common.Groups_Roles gr ON gu.Group_Id=gr.Group_Id WHERE gr.Role_Id=@RoleId AND u.Status=@Status;"></add>-->
  <!--<add key="GetUserDetailsByEmail" value="WITH UserCTE (Id, Name, FirstName, Email, Salt, [Status], IsSuperUser,IsFirstLogin, CompanyCode, CompanyName ) AS (SELECT   us.Id,   us.Name,   up.FirstName,  up.Email,   us.Salt,   us.Status,   us.IsSuperUser,   us.IsFirstLogin,  LTRIM(RTRIM(Ins.Code)) AS CompanyCode,   Ins.Name AS CompanyName FROM Common.Users us JOIN Common.UserProfile up ON US.Id = UP.UserId LEFT JOIN Common.Users_Instance AS Ui   ON Ui.User_Id = us.Id LEFT JOIN Common.InstanceDetails AS Ins ON Ins.Id = Ui.Instance_Id WHERE us.Name =@Email) SELECT   Id,   Name,   FirstName,   Email, Salt,[Status],  IsSuperUser,IsFirstLogin,CompanyCode,CompanyName,CASE WHEN IsSuperUser = 0 THEN (SELECT LTRIM(RTRIM(Ins.Code)) FROM Common.Users AS us JOIN OranizationUsers AS OrgUs ON us.Id = OrgUs.UserId  JOIN Organization AS Org ON Org.Id = OrgUs.OrganizationId JOIN InstanceDetails AS Ins ON Ins.Id = Org.InstanceId WHERE us.Name = @Email)END AS OrgCompnayCode FROM UserCTE order by CompanyCode;"></add>-->
    <add key="CheckOrgnizationDuplicate" value="SELECT Id FROM OrganizationUsers WHERE UserId=@UserId and OrganizationId=@OrganizationId;"></add>
    <add key="InsertUserOrgnization" value="INSERT INTO OrganizationUsers ([OrganizationId], [UserId])VALUES(@OrganizationId,@UserId);"></add>
    <add key="DeleteUserOrgnization" value="DELETE FROM OrganizationUsers WHERE UserId=@UserId and OrganizationId=@OrganizationId;"></add>
    
    <add key="CheckGroupDuplicate" value="SELECT Id FROM Groups_Users WHERE User_Id=@User_Id and Group_Id=@Group_Id;"></add>
    <add key="InsertUserGroup" value="INSERT INTO Groups_Users ([User_Id],[Group_Id],[CreatedOn],[CreatedBy])VALUES(@User_Id,@Group_Id,@CreatedOn,@CreatedBy);"></add>
    <add key="DeleteUserGroup" value="DELETE FROM Groups_Users WHERE User_Id=@User_Id and Group_Id=@Group_Id;"></add>

    <add key="UpdatePasswordResetCode" value="Update common.users set PasswordResetCode = @passwordResetCode, PasswordResetCodeExpiresOn = getdate() WHERE Name = @email;"></add>
  </UserQueryConfigurations>
  <DepartmentQueryConfigurations>
    <add key="GetAllDepartment" value="SELECT Distinct D.Id,D.Name,D.Status FROM common.Department D WHERE D.Status=@Status;"></add>
    <add key="GetDepartment" value="SELECT dp.Id,dp.Name,dp.Status FROM common.Department dp WHERE Id=@DepartmentId;"></add>
    <add key="DepartmentCheckDuplicate" value="SELECT Id FROM common.Department WHERE Name=@DepartmentName;"></add>
    <add key="AddDepartment" value="INSERT INTO common.Department(Name,Status,CreatedOn,CreatedBy)VALUES(@DepartmentName,@Status,@CreatedOn,@CreatedBy) Select @@Identity;"></add>
    <add key="UpdateDepartment" value="UPDATE common.Department SET Name=@DepartmentName, Status=@Status WHERE Id=@DepartmentId;"></add>
    <add key="DeleteDepartment" value="UPDATE common.Department SET Status=@Status WHERE Id=@DepartmentId;"></add>
  </DepartmentQueryConfigurations>
  <DesignationQueryConfigurations>
    <add key="GetAllDesignation" value="SELECT Distinct D.Id,D.Designation,D.Status FROM common.Designation D WHERE D.Status=@Status;"></add>
    <add key="GetDesignation" value="SELECT dp.Id,dp.Designation,dp.Status FROM common.Designation dp WHERE dp.Id=@DesignationId;"></add>
    <add key="DesignationCheckDuplicate" value="SELECT Id FROM common.Designation WHERE Designation=@DesignationName;"></add>
    <add key="AddDesignation" value="INSERT INTO common.Designation(Designation,Status,CreatedOn,CreatedBy)VALUES(@DesignationName,@Status,@CreatedOn,@CreatedBy) Select @@Identity;"></add>
    <add key="UpdateDesignation" value="UPDATE common.Designation SET Designation=@DesignationName, Status=@Status WHERE Id=@DepartmentId;"></add>
    <add key="DeleteDesignation" value="Delete common.Designation  WHERE Id=@DesignationId;"></add>
    <add key="AddDesignation" value="INSERT INTO common.Designation(Designation,Status,CreatedOn,CreatedBy)VALUES(@Designation,@Status,@CreatedOn,@CreatedBy) Select @@Identity;"></add>
    <!--<add key="GetAllDesignation" value="SELECT Distinct D.Id,D.Designation,D.Status,M.Code,M.Name,M.Id as ModuleId FROM common.Designation D INNER JOIN common.UserProfile UP ON D.Id=UP.Department INNER JOIN common.Groups_Users GU ON UP.UserId=GU.User_Id INNER JOIN common.Groups_Roles GR ON GU.Group_Id=GR.Group_Id INNER JOIN common.Roles R ON GR.Role_Id=R.Id INNER JOIN common.Module M ON R.ModuleId=M.Id WHERE D.Status=@Status;"></add>-->
  </DesignationQueryConfigurations>
  <ModuleQueryConfigurations>
    <add key="GetModuleDetails" value="SELECT Id, Name, Code, Description FROM common.[Module];"></add>
    <add key="GetModulesLinkedtoUser" value="SELECT DISTINCT U.Id,U.Name as UserName,R.ModuleId,M.Name as ModuleName FROM common.[Users] U INNER JOIN common.Groups_Users GU ON U.Id=GU.User_Id INNER JOIN common.Groups_Roles GR ON GU.Group_Id=GR.Group_Id INNER JOIN common.Roles R ON GR.Role_Id=R.Id LEFT OUTER JOIN common.Module m ON R.ModuleId=M.Id;"></add>
    <!--<add key="AddModuleToUser" value="INSERT INTO common.[UserModule] (UserId,ModuleId) VALUES (@UserId,@ModuleId);"></add>-->
    <!--<add key="RemoveModuleFromUser" value="DELETE FROM common.[UserModule] WHERE UserId=@UserId AND ModuleId=@ModuleId"></add>-->
  </ModuleQueryConfigurations>

  <!--<ActionQueryConfigurations>
    <add key="GetAllActionInfo" value="SELECT Id,ActionCode,Description,CreatedOn,CreatedBy,Status FROM [Action] WHERE Status=@Status;"></add>
    <add key="GetAllActionInfoById" value="SELECT Id,ActionCode,Description,CreatedOn,CreatedBy,Status FROM [Action] a WHERE a.Id=@ActionId AND a.Status=@Status;"></add>
    <add key="AddActionDetail" value="INSERT INTO [Action] (ActionCode,Description,ModuleId,CreatedOn,CreatedBy,Status) VALUES (@ActionCode,@Description,@ModuleId,@CreatedOn,@CreatedBy,@Status);"></add>
    <add key="UpdateActionDetail" value="UPDATE [Action] SET Description=@Description, Status=@Status WHERE Id=@ActionId"></add>
    <add key="RemoveActionInfo" value="UPDATE [Action] SET Status=@Status WHERE Id=@ActionId"></add>
    <add key="AssignActionToRole" value="INSERT INTO [Role_Action](RoleId,ActionId,CreatedOn,CreatedBy) VALUES(@RoleId,@ActionId,@CreatedOn,@CreatedBy)"></add>
    <add key="GetAllActionInfoByUserId" value="SELECT DISTINCT A.Id,A.ActionCode,A.Description,A.Status,A.CreatedOn,A.CreatedBy FROM [Action] A LEFT OUTER JOIN Role_Action RA ON A.Id=RA.ActionId LEFT OUTER JOIN Groups_Roles GR ON RA.RoleId=GR.Role_Id LEFT OUTER JOIN Groups_Users GU ON GR.Group_Id=GU.Group_Id WHERE GU.User_Id=@UserId AND A.Status=@Status;"></add>
    <add key="GetAllActioninfoByRoleId" value="SELECT ac.Id, ac.ActionCode,ac.Description,ac.CreatedOn,ac.CreatedBy,ac.ModuleId,ac.ParentId, ac.OrderIndex, null as FlagId FROM [Action] ac WHERE NOT EXISTS (SELECT ActionId FROM [Role_Action] WHERE ActionId = ac.Id AND RoleId = @RoleId) UNION SELECT ac.Id, ac.ActionCode,ac.Description,ac.CreatedOn,ac.CreatedBy,ac.ModuleId,ac.ParentId, ac.OrderIndex,rr.Id as FlagId FROM [Action] ac JOIN [Role_Action] rr on ac.Id = rr.ActionId and rr.RoleId = @RoleId Order by ac.OrderIndex;"></add>
    <add key="GetCountbyRoleAndAction" value="SELECT Count(*) as CountRecord FROM [Role_Action] roleact WHERE roleact.RoleId = @RoleId and roleact.ActionId = @ActionId;"></add>
    <add key="RemoveActionFromRole" value="Delete From [Role_Action] WHERE RoleId = @RoleId and ActionId = @ActionId;"></add>
    <add key="GetAllActionCodePermission" value="SELECT DISTINCT A.Id,A.ActionCode FROM [Action] A LEFT OUTER JOIN Role_Action RA ON A.Id=RA.ActionId LEFT OUTER JOIN Groups_Roles GR ON RA.RoleId=GR.Role_Id  LEFT OUTER JOIN Groups_Users GU ON GR.Group_Id=GU.Group_Id WHERE GU.User_Id=@UserId AND A.ActionCode in("></add>
  </ActionQueryConfigurations>

  <ResourceQueryConfigurations>
    <add key="GetResourceInfoById" value="SELECT rs.Id, rs.ModuleId, rs.ResourceCode, up.Id as ResourceTypeId, up.ResourceType, rs.ResourceURL, rs.CreatedOn,rs.Description, us.Name as CreatedBy FROM [Resource] rs JOIN [Users] us ON rs.CreatedBy = us.Id JOIN [ResourceType] up ON up.Id = rs.ResourceType WHERE rs.Id = @ResourceId;"></add>
    <add key="GetResourcesByRole" value="SELECT rc.Id, rc.ResourceCode,rc.Description,rc.CreatedOn,rc.CreatedBy,rc.ModuleId,rc.ParentId,rc.OrderIndex, rc.ResourceURL ,up.ResourceType,up.Id as ResourceTypeId, null as FlagId FROM [Resource] rc JOIN [ResourceType] up ON up.Id = rc.ResourceType JOIN [Module] md ON md.Id = rc.ModuleId WHERE NOT EXISTS (SELECT ResourceId FROM [Roles_Resource] WHERE ResourceId = rc.Id AND RoleId = @RoleId) UNION SELECT rc.Id, rc.ResourceCode,rc.Description,rc.CreatedOn,rc.CreatedBy,rc.ModuleId,rc.ParentId,rc.OrderIndex, rc.ResourceURL ,up.ResourceType,up.Id as ResourceTypeId,rr.Id as FlagId FROM [Resource] rc JOIN [ResourceType] up ON up.Id = rc.ResourceType JOIN [Module] md ON md.Id = rc.ModuleId JOIN [Roles_Resource] rr on rc.Id = rr.ResourceId and rr.RoleId = @RoleId and md.Code = @Module;"></add>
    <add key="RemoveResourceFromRole" value="Delete From [Roles_Resource] WHERE RoleId = @RoleId and ResourceId = @ResourceId;"></add>
    <add key="AddResourceToRole" value="INSERT INTO [Roles_Resource] (RoleId,CreatedOn,CreatedBy,ResourceId) VALUES (@RoleId,@CreatedOn,@CreatedBy,@ResourceId)"></add>
    <add key="GetAllResourceByModule" value="select rs.Id,rs.ModuleId,rs.ResourceCode,rs.ResourceType,rs.ResourceURL,mo.Name as ModuleName,rt.ResourceType,us.Name,rt.ResourceType as ResourceTypeName,rs.CreatedOn from [Resource] rs join Module mo on rs.ModuleId=mo.Id join ResourceType rt on rs.ResourceType=rt.Id left outer join Users us on rs.CreatedBy=us.Id where mo.Code=@Module;"></add>
    <add key="AddResource" value="INSERT into Resource(ModuleId,ResourceCode,ResourceType,ResourceURL,CreatedOn,CreatedBy,Description) values(@Module,@ResourceCode,@ResourceType,@ResourceURL,@CreatedOn,@CreatedBy,@Description);"></add>
    <add key="UpdateResource" value="UPDATE Resource  set ModuleId=@Module, ResourceCode=@ResourceCode,ResourceType=@ResourceType,ResourceURL=@ResourceURL,Description=@Description WHERE Id=@ResourceId;"></add>
    <add key="GetAllResouceByUserId" value="SELECT  Distinct re.Id,re.ResourceCode,re.ResourceType,re.ResourceURL,re.ModuleId,rt.ResourceType as ResourceTypeName,u.Name,re.CreatedOn from Resource re left outer join [Roles_Resource] rr on re.Id=rr.ResourceId left outer join [Groups_Roles] gr on rr.RoleId=gr.Role_Id left outer join [Groups_Users] gu on gr.Group_Id=gu.Group_Id join ResourceType rt on re.ResourceType=rt.Id join Module mo on re.ModuleId=mo.Id left outer join Users u on gu.User_Id=u.Id where gu.User_Id=@UserId and mo.Code=@Module;"></add>
    <add key="GetActionByuserId" value="select Distinct ac.ActionCode from  Action ac join [Role_Action] ra on ac.Id=ra.ActionId join Groups_Roles gr on ra.RoleId=gr.Role_Id join [Groups_Users] gu on gr.Group_Id=gu.Group_Id where gu.User_Id=@UserId and ac.Status = 'Active';"></add>
    <add key="GetResourceByUserId" value="SELECT  Distinct re.ResourceCode from Resource re left outer join [Roles_Resource] rr on re.Id=rr.ResourceId left outer join [Groups_Roles] gr on rr.RoleId=gr.Role_Id left outer join [Groups_Users] gu on gr.Group_Id=gu.Group_Id join ResourceType rt on re.ResourceType=rt.Id join Module mo on re.ModuleId=mo.Id left outer join Users u on gu.User_Id=u.Id where  gu.User_Id=@UserId and mo.Code=@Module;"></add>
    <add key="GetCountByRoleAndResource" value="SELECT Count(*) as CountRecord FROM [Roles_Resource] rolers WHERE rolers.RoleId = @RoleId and rolers.ResourceId = @ResourceId;"></add>
  </ResourceQueryConfigurations>

  <RoleQueryConfigurations>
    <add key="GetAllRoleInfo" value="SELECT rs.Id, rs.Name, rs.Description, rs.Status,rs.ModuleId as moduleId, rs.CreatedOn, us.Name as CreatedBy,mo.Name as ModuleName FROM [Roles] rs JOIN [Users] us ON rs.CreatedBy = us.Id JOIN  Module mo on rs.ModuleId=mo.Id WHERE rs.Status=@Status AND mo.Code = @ModuleCode order by rs.Name"></add>
    <add key="GetRoleInfoById" value="SELECT rs.Id, rs.Name, rs.Description, rs.Status,rs.ModuleId as moduleId, rs.CreatedOn, us.Name as CreatedBy,mo.Name as ModuleName FROM [Roles] rs JOIN [Users] us ON rs.CreatedBy = us.Id JOIN Module mo on rs.ModuleId=mo.Id WHERE rs.Id = @RoleId"></add>
    <add key="AddRoleDetail" value="INSERT INTO Roles (Name,Description,Status,CreatedOn,CreatedBy,ModuleId) VALUES (@Name,@Description,@Status,@CreatedOn,@CreatedBy,(SELECT Id FROM Module WHERE Code=@Module));"></add>
    <add key="UpdateRoleDetails" value="UPDATE Roles SET Name = @Name, Description = @Description, Status = @Status WHERE Roles.Id = @RoleId;"></add>
    <add key="RemoveRoleInfo" value="UPDATE [Roles] SET Status = @Status where Id = @RoleId"></add>
    <add key="AccessPermissionToRole" value="INSERT INTO Roles_Permissions (Role_Id, Permission_Id, CreatedOn, CreatedBy) VALUES (@RoleId,@PermissionId,@CreatedOn,@CreatedBy);"></add>
    <add key="RemovePermissionFromRole" value="DELETE FROM Roles_Permissions WHERE Role_Id=@RoleId AND Permission_Id=@PermissionId;"></add>
    <add key="GetRolesAssignedToRolesGroup" value="SELECT rs.Id, rs.Name, rs.Description, rs.Status, us.Name as CreatedBy FROM [Roles] rs JOIN [users] us ON rs.CreatedBy = us.Id JOIN [Groups_Roles] gr ON rs.Id = gr.Role_Id WHERE gr.Group_Id = @GroupId and rs.Status = @Status order by rs.Name;"></add>
    <add key="GetRolesByStatus" value="SELECT Id,Name,Description,Status FROM Roles WHERE Status = @Status order by Name;"></add>
  </RoleQueryConfigurations>

  <UserGroupQueryConfigurations>
	<add key="GetAllUserGroupInfo" value="SELECT gp.Id, gp.Name, gp.Description, gp.Status,mo.Code, gp.CreatedOn, us.Name as CreatedBy, gt.Id as GroupId, gt.GroupType from [Group] gp JOIN [Users] us ON gp.CreatedBy = us.Id  JOIN GroupType gt ON gp.GroupTypeId=gt.Id LEFT OUTER JOIN Module  mo on gp.ModuleId=mo.Id WHERE gp.Status=@Status and mo.Code=@ModuleCode"></add>
    <add key="GetRoleLinkedtoGroup" value="  SELECT Id FROM [Groups_Roles] Where Group_Id= @groupId  AND Role_Id =@roleId"></add>
    <add key="GetUserLinkedtoGroup" value=" SELECT Id FROM [Groups_Users] Where Group_Id = @groupId AND User_Id = @userId"></add>
    <add key="GetAllUserGroupInfoById" value="SELECT gp.Id, gp.Name, gp.Description, gp.Status, gp.CreatedOn, us.Name as CreatedBy, gt.Id as GroupId, gt.GroupType from [Group] gp JOIN [Users] us ON gp.CreatedBy = us.Id JOIN [Module] mo ON gp.ModuleId=mo.Id join [GroupType] gt on gp.GroupTypeId=gt.Id WHERE gp.Id = @GroupId;"></add>
    <add key="GetAllGroupType" value="SELECT gt.Id,gt.GroupType from [GroupType] gt;"></add>
    <add key="GetAllGroupByTypeStatus" value="SELECT gp.Id,gp.Name,gp.Description,u.Name as CreatedBy,gp.Status,mo.Name as ModuleName,mo.Code as ModuleCode,gp.CreatedOn,gt.Id as GroupId,gt.GroupType as GroupType FROM [Group] gp JOIN [Module] mo ON gp.ModuleId=mo.Id JOIN [Users] u ON gp.CreatedBy=u.Id JOIN [GroupType] gt ON gp.GroupTypeId=gt.Id WHERE gp.Status=@Status and gt.Id=@Type;"></add>
    <add key="getUserByGroup" value="SELECT User_Id FROM Groups_Users WHERE Group_Id=@GroupId;"></add>
    <add key="getRoleByGroup" value="SELECT Role_Id FROM Groups_Roles WHERE Group_Id=@GroupId;"></add>
    <add key="GetGroupFolderByGroup" value="SELECT FolderId FROM GroupFolders WHERE GroupId=@GroupId;"></add>
    <add key="AddUserGroupDetail" value="INSERT INTO [Group] (Name, Description, Status, CreatedOn,CreatedBy,GroupTypeId,ModuleId) VALUES (@Name,@Description,@Status,@CreatedOn,@CreatedBy,@GroupId,(select Id from Module where Module.Code=@Module)) Select @@Identity;"></add>
    <add key="UpdateUserGroupDetail" value="UPDATE [Group] SET Name=@Name, Description=@Description,GroupTypeId=@GroupType,ModuleId=(select Id from Module where Module.Code=@Module) WHERE Id=@GroupId;"></add>
    <add key="RemoveUserGroupInfo" value="UPDATE [Group] SET Status = @Status WHERE Id = @GroupId;"></add>
    <add key="AddUserToGroup" value="INSERT INTO Groups_Users (User_Id,Group_Id,CreatedOn,CreatedBy) VALUES (@UserId,@GroupId,@CreatedOn,@CreatedBy);"></add>
	<add key="AddSuperUserToGroup" value="DECLARE @GroupId INT;SELECT @GroupId = Id FROM [Group] WHERE Name='SuperAdminGroup';
INSERT INTO Groups_Users (User_Id,Group_Id,CreatedOn,CreatedBy) VALUES (@UserId,@GroupId,@CreatedOn,@CreatedBy);"></add>
    <add key="RemoveUserFromGroup" value="DELETE FROM Groups_Users WHERE User_Id=@UserId AND Group_Id=@GroupId;"></add>
    <add key="AddRoleToGroup" value="INSERT INTO Groups_Roles (Group_Id,Role_Id,CreatedOn,CreatedBy) VALUES (@GroupId,@RoleId,@CreatedOn,@CreatedBy);"></add>
    <add key="RemoveRoleFromGroup" value="DELETE FROM Groups_Roles WHERE Group_Id=@GroupId AND Role_Id=@RoleId;"></add>
    <add key="AddFolderToGroup" value="INSERT Into GroupFolders(GroupId,FolderId)values(@GroupId,@FolderId);"></add>

	  <add key="DuplicateGroupAttributeMap" value="SELECT Id FROM [Group_Attribute_Mapping] WHERE GroupId=@GroupId and AttributeId=@AttributeId;"></add>
	  <add key="GroupAttributeMap" value="INSERT INTO [dbo].[Group_Attribute_Mapping]([GroupId],[AttributeId])VALUES (@GroupId,@AttributeId)
;"></add>
	  <add key="RemoveGroupAttributeMap" value="DELETE FROM [Group_Attribute_Mapping] WHERE GroupId=@GroupId AND AttributeId=@AttributeId
;"></add>

	  <add key="GetAllLinkedAttributeByGroupId" value="SELECT GrAtt.AttributeId, Att.Label FROM Group_Attribute_Mapping AS GrAtt JOIN Attribute as Att ON GrAtt.AttributeId = Att.Id WHERE GrAtt.GroupId=@GroupId;"></add>
	  <add key="GetUserGroups" value="SELECT Id FROM Groups_Users WHERE [User_Id]=@UserId AND [Group_Id]=@GroupId;"></add>
	  <add key="DuplicateGroupUserMap" value="SELECT Id FROM Groups_Users WHERE User_Id=@UserId and Group_Id=@GroupId;"></add>
  </UserGroupQueryConfigurations>

  <UserQueryConfigurations>
  <add key="GetAllAgencyInfo" value="Select cm.Id, cm.Code, cm.CompanyName, cm.DBServerName, cm.DBName, cm.DBUserName, cm.DBPassword  from [Company] cm;" />
  --><!--<add key="GetAllUserInfo" value="SELECT us.Id, us.Name, up.FirstName, up.LastName, up.MiddleName, up.Email, up.Phone, up.Address1, up.Address2, up.City, up.State, up.Country, up.Zipcode, us.Status, us.ExpiresOn, us.CreatedOn, u.Name as CreatedBy from [Users] us JOIN [Users] u ON Us.CreatedBy = u.Id JOIN [UserProfile] up ON up.UserId = us.Id;" />--><!--
  <add key="GetUserInfoById" value="SELECT us.Id, us.Name, up.FirstName, up.LastName, up.MiddleName, up.Email, up.Phone, up.Address1, up.Address2, up.City, up.State, up.Country, up.Zipcode, us.Status, us.ExpiresOn, us.CreatedOn, u.Name as CreatedBy, up.Image, up.JobProfile, up.Accomplishments, up.DisplayOrderIndex, up.Hobbies, up.DOB,dt.Id as DepartmentId, dt.Name as Department, ds.Id as DesignationId, ds.Designation, repo.UserId as ReportingToId, repo.Email as ReportingTo, up.JoiningDate, up.TotalYrsExp, us.IsSuperUser from [Common.Users] us JOIN [Common.UserProfile] up ON up.UserId = us.Id LEFT OUTER JOIN [Common.UserProfile] repo ON repo.UserId = us.Id JOIN [Common.Users] u ON Us.CreatedBy = u.Id LEFT OUTER JOIN Common.Department dt ON dt.Id = up.Department LEFT OUTER JOIN Common.Designation ds ON ds.Id = up.Designation WHERE us.Id = @UserId;" />
	  <add key="GetUserInfoBuOrgGuid" value="SELECT us.Id, us.Name, up.FirstName, up.LastName, up.MiddleName, up.Email, up.Phone, up.Address1, up.Address2, up.City, up.State, up.Country, up.Zipcode, us.Status, us.ExpiresOn, us.CreatedOn, u.Name as CreatedBy, up.Image, up.JobProfile, up.Accomplishments, up.DisplayOrderIndex, up.Hobbies, up.DOB,dt.Id as DepartmentId, dt.Name as Department, ds.Id as DesignationId, ds.Designation, repo.UserId as ReportingToId, repo.Email as ReportingTo, up.JoiningDate, up.TotalYrsExp, us.IsSuperUser from [Common.Users] us JOIN [Common.UserProfile] up ON up.UserId = us.Id LEFT OUTER JOIN [Common.UserProfile] repo ON repo.UserId = us.Id JOIN [Users] u ON Us.CreatedBy = u.Id LEFT OUTER JOIN Common.Department dt ON dt.Id = up.Department LEFT OUTER JOIN Common.Designation ds ON ds.Id = up.Designation    JOIN  OranizationUsers AS OrgUser on OrgUser.UserId = Us.Id join Organization as Org on Org.Id = OrgUser.OrganizationId  WHERE Org.OrgGUID = @OrgGuid;" />
  <add key="GetUserImagebyId" value=" SELECT Image FROM [Common.UserProfile] WHERE UserId = @UserID"></add>
  <add key="getGroupByUserId" value="SELECT g.Id, g.GroupTypeId from [Common.Group] g JOIN [Common].[Groups_Users] gu ON g.Id=gu.Group_Id WHERE gu.User_Id = @UserId;"></add>
  <add key="AddUserDetail" value="INSERT INTO Common.Users (Name, Password, Status, ExpiresOn, CreatedOn, CreatedBy, Salt, IsFirstLogin,IsSuperUser) VALUES (@Username,@Password,@Status,@ExpiryOn,@CreatedOn,@CreatedBy,@Salt,@IsFirstLogin,@IsSuperUser) Select @@Identity;"></add>
   <add key="VerifyUserWithModule" value="SELECT u.Id FROM Common.Users u join Common.UserModule um on u.Id=um.UserId join Common.Module mo on um.ModuleId=mo.Id where u.Name=@UserName and mo.Code=@ModuleCode"></add>
   <add key="VerifyUser" value="SELECT Users.Id FROM Common.Users WHERE Users.Name=@UserName;"></add>
  <add key="GetCompanyCode" value="SELECT Code FROM Common.Company C JOIN Common.UserCompany UC ON C.Id=UC.CompamyId JOIN ControlUsers CU ON UC.UserId=CU.Id WHERE CU.Email='{0}';"></add>-->
  <!--
  <add key="VerifyUserModule" value="SELECT Id FROM Common.UserModule WHERE UserId=@UserId AND ModuleId=(SELECT Id FROM Common.Module WHERE Code=@ModuleCode);"></add>
  <add key="GetUserDetailsBySalt" value="SELECT us.Id,us.Name,up.FirstName,up.Email,us.ExpiresOn FROM Common.Users us JOIN Common.UserProfile up ON us.Id=up.UserId WHERE us.Salt=@Salt"></add>
  <add key="AddUserProfileDetail" value=" INSERT INTO [Common].[UserProfile] (UserId,FirstName,LastName,Email,Phone,Address1,Address2,City,State,Country,Zipcode,Image,ReportingTo,TotalYrsExp,DOB,Hobbies,JoiningDate,Department,Designation,EmployeeId, JobProfile, Accomplishments) VALUES (@UserId,@FirstName,@LastName,@Email,@Phone,@Address1,@Address2,@City,@State,@Country,@Zipcode,@FileName,@ReportingTo,@TotalYrsExp,@DOB,@Hobbies,@JoiningDate,@Department,@Designation,@EmployeeId, @JobProfile, @Accomplishments);"></add>
  <add key="AddUserModuleDetail" value="INSERT INTO Common.UserModule(UserId,ModuleId) VALUES(@UserId, (SELECT Id FROM Module WHERE Code=@ModuleCode));"></add>
  --><!--<add key="VerifyUserControl" value="SELECT Id FROM ControlUsers WHERE Email=@Email;"></add>--><!--
  --><!--<add key="AddUserControlDetail" value="INSERT INTO ControlUsers(Email)VALUES(@Email) SELECT @@IDENTITY;"></add>--><!--
  --><!--<add key="GetUserCompany" value=" select u.Id from UserCompany u where UserId=@UserControlId and u.CompamyId=(Select c.Id from Company c where Code=@CompanyCode)"></add>--><!--
	<add key="GetUserOrganisation" value="SELECT ou.OrganizationId FROM Common.Users AS us JOIN OranizationUsers AS ou ON us.Id = ou.UserId WHERE ou.UserId=1 AND ou.OrganizationId=(select Id from Organization where OrgGUID=@OrgGuid);"></add>  
  <add key="AddUserCompanyDetail" value="INSERT INTO Common.UserCompany(UserId,CompamyId)VALUES(@UserControlId,(SELECT Id FROM Company WHERE Code=@CompanyCode));"></add>
  --><!--<add key="UpdateUserDetail" value="UPDATE Users SET Status='{2}', ExpiresOn='{3}' WHERE users.Id={4};"></add>--><!--
  --><!--<add key="UpdateUserProfileDetailWithImage" value="UPDATE [UserProfile] SET FirstName=@FirstName,LastName=@LastName,Email=@Email,Phone=@Phone,Address1=@Address1,Address2=@Address2,City=@City,State=@State,Country=@Country,Zipcode=@Zipcode,Image=@FileName WHERE UserId =@UserId;"></add>--><!--
	  --><!--<add key="GetUserInstance" value="SELECT Instance_Id FROM Common.Users_Instance WHERE [User_Id]=@UserId and Instance_Id=@InstanceId;"></add>--><!--
	  --><!--<add key="LinkUserToInstance" value="INSERT INTO [dbo].[Users_Instance]([User_Id],[Instance_Id])VALUES(@UserId, @InstanceId);"></add>--><!--
	  <add key="UpdateUserProfileDetailWithImage" value="  UPDATE [Common].[UserProfile] SET FirstName=@FirstName,LastName=@LastName,Email=@Email,Phone=@Phone,Address1=@Address1,Address2=@Address2,City=@City,State=@State,Country=@Country,Zipcode=@Zipcode,Image=@FileName, ReportingTo = @ReportingTo, TotalYrsExp = @TotalYrsExp, DOB=@DOB,Hobbies = @Hobbies, JoiningDate = @JoiningDate, Department = @Department, Designation = @Designation,EmployeeId = @EmployeeId, JobProfile = @JobProfile, Accomplishments = @Accomplishments WHERE UserId =@UserId;"></add>
  <add key="UpdateUserProfileDetail" value="UPDATE [Common].[UserProfile] SET FirstName='{1}',LastName='{2}',MiddleName='{3}',Email='{4}',Phone='{5}',Address1='{6}',Address2='{7}',City='{8}',State='{9}',Country='{10}',Zipcode='{11}' WHERE [UserProfile].UserId ={0};"></add>
  <add key="UpdateUserStatus" value="UPDATE Common.Users SET Status=@Status WHERE Id = @UserId;"></add>
  <add key="GetUserByStatus" value="SELECT us.Id, us.Name, up.FirstName, up.LastName, up.MiddleName, up.Email, up.Phone, up.Address1, up.Address2, up.City, up.State, up.Country, up.Zipcode, us.Status, us.ExpiresOn, us.CreatedOn, u.Name AS CreatedBy, up.Image ,up.JobProfile, up.Accomplishments, up.DisplayOrderIndex  FROM [Common].[Users] us JOIN [Common].[Users] u ON Us.CreatedBy = u.Id JOIN [Common].[UserProfile] up ON up.UserId = us.Id JOIN Common.UserModule um ON us.Id = um.UserId WHERE us.Status=@Status AND um.ModuleId = (SELECT Id FROM Module where Code = @ModuleCode) order by up.FirstName, up.LastName;" />
	  <add key="GetUserDetails" value="SELECT us.Id, us.Name, up.FirstName, up.LastName, up.MiddleName, up.Email, up.Phone, up.Address1, up.Address2, up.City, up.State, up.Country, up.Zipcode, us.Status, us.ExpiresOn, us.CreatedOn, u.Name AS CreatedBy, up.Image ,up.JobProfile, up.Accomplishments, up.DisplayOrderIndex , ph.PhoneNumber FROM [Common].[Users] us JOIN [Common].[Users] u ON Us.CreatedBy = u.Id JOIN [UserProfile] up ON up.UserId = us.Id JOIN Common.UserModule um ON us.Id = um.UserId join Common.Phone as ph on ph.ContactId = us.Id WHERE us.IsSuperUser=@IsSuperUser and Us.[Status]=@Status and ph.ContactType='user' and ph.IsPrimary=1 ORDER BY up.FirstName, up.LastName;" />
    <add key="GetAllUserDetails" value="SELECT us.Id, us.Name, up.FirstName, up.LastName, up.MiddleName, up.Email, up.Phone, up.Address1, up.Address2, up.City, up.State, up.Country, up.Zipcode, us.Status, us.ExpiresOn, us.CreatedOn, u.Name AS CreatedBy, up.Image ,up.JobProfile, up.Accomplishments, up.DisplayOrderIndex , ph.PhoneNumber FROM [Common].[Users] us JOIN [Common].[Users] u ON Us.CreatedBy = u.Id JOIN [Common].[UserProfile] up ON up.UserId = us.Id JOIN [Common].UserModule um ON us.Id = um.UserId join Phone as ph on ph.ContactId = us.Id WHERE us.IsSuperUser=@IsSuperUser and ph.ContactType='user' and ph.IsPrimary=1 ORDER BY up.FirstName, up.LastName;" />
	  <add key="GetUserDetailsByOrg" value="SELECT us.Id, us.Name, up.FirstName, up.LastName, up.MiddleName, up.Email, up.Phone, up.Address1, up.Address2, up.City, up.State, up.Country, up.Zipcode, us.Status, us.ExpiresOn, us.CreatedOn, u.Name AS CreatedBy, up.Image ,up.JobProfile, up.Accomplishments, up.DisplayOrderIndex , ph.PhoneNumber as PhoneNumber FROM [Common].[Users] us JOIN [Common].[Users] u ON Us.CreatedBy = u.Id JOIN [Common].[UserProfile] up ON up.UserId = us.Id JOIN [Common].UserModule um ON us.Id = um.UserId JOIN  OranizationUsers AS OrgUser on OrgUser.UserId = Us.Id join Organization as Org on Org.Id = OrgUser.OrganizationId  join [Common].Phone as ph on ph.ContactId = us.Id  WHERE us.IsSuperUser=0 and Us.[Status]=@Status and Org.OrgGUID=@OrgGUID and ph.ContactType='user' and ph.IsPrimary=1 ORDER BY up.FirstName, up.LastName;" />
    
    
    
  <add key="GetUserByEmail" value="SELECT us.Id, us.Name, up.FirstName, up.Email, u.Name as CreatedBy, us.Salt, us.Password, us.IsFirstLogin, us.ExpiresOn FROM [Users] us JOIN [Users] u ON Us.CreatedBy = u.Id JOIN UserProfile up ON us.Id = up.UserId WHERE us.Name = @Email;"></add>
  <add key="ResetPassword" value="UPDATE Users SET Password=@Password,Salt=@Salt,ExpiresOn=@ExpireOn,IsFirstLogin=@IsFirstLogin WHERE Users.Id = @UserId;"></add>
  <add key="RemoveUsersInfo" value="UPDATE [Users] set Status = @Status WHERE Id = @UserId;"></add>
  <add key="MovingUserToAnotherGroup" value="UPDATE Groups_Users SET Group_Id = @NewGroupId WHERE User_Id=@UserId AND Group_Id=@ExistGroupId;"></add>
  <add key="GetUsersOfExpiredAccount" value="SELECT us.Id, us.Name, up.FirstName, up.LastName, up.MiddleName, up.Email, up.Phone, up.Address1, up.Address2, up.City, up.State, up.Country, up.Zipcode, us.Status, us.ExpiresOn, us.CreatedOn, u.Name as CreatedBy, up.Image, up.JobProfile, up.Accomplishments, up.DisplayOrderIndex  FROM [Users] us JOIN Users u ON Us.CreatedBy = u.Id JOIN [UserProfile] up ON up.UserId = us.Id JOIN UserModule um ON us.Id = um.UserId WHERE us.ExpiresOn >= @Today AND us.ExpiresOn &lt;= @ExpiryDate AND us.Status=@Status AND um.ModuleId = (SELECT Id FROM Module where Code = @Module);"></add>
  <add key="GetUsersAssignedtoUsersGroup" value="SELECT us.Id, us.Name, us.ExpiresOn, us.Status, u.Name as CreatedBy from [Users] us JOIN [Users] u ON Us.CreatedBy = u.Id JOIN [Groups_Users] gu ON us.Id = gu.User_Id where gu.Group_Id = @GroupId and us.Status = @Status;"></add>
  <add key="GetUsersAssignedToRole" value="SELECT DISTINCT u.Id, u.Name, u.Status, u.ExpiresOn, us.Name as CreatedBy FROM Users us INNER JOIN Users u ON u.CreatedBy=us.Id JOIN Groups_Users gu ON u.Id=gu.User_Id JOIN Groups_Roles gr ON gu.Group_Id=gr.Group_Id WHERE gr.Role_Id=@RoleId AND u.Status=@Status;"></add>
  <add key="GetIPConfig" value="SELECT IPAddress FROM [IPConfig]"></add>
  <add key="GetAgencyInfo" value="SELECT DISTINCT comp.Id,comp.CompanyName,comp.Code FROM Company comp JOIN UserCompany userComp ON comp.Id=userComp.CompamyId JOIN  ControlUsers conUser ON userComp.UserId=conUser.Id WHERE conUser.Email=@Username;"></add>
  <add key="GetCompanyId" value="SELECT TOP 1 comp.CompamyId FROM ControlUsers conUser JOIN UserCompany comp ON conUser.Id = comp.UserId WHERE conUser.Email=@Username;"></add>
  <add key="GetUserInfo" value="SELECT Id,Name,Password,Status,Salt,IsFirstLogin,AccessRestriction FROM Users WHERE Name=@Username;"></add>
  <add key="GetCompanyInfo" value="SELECT cm.Id, cm.Code, cm.Name as CompanyName, cm.DBServer as DBServerName, cm.DBName, cm.DBUserName, cm.DBPassword, cm.AuthMode FROM  [Control].dbo.InstanceDetails  cm WHERE cm.Code=@Code;"></add>
  <add key="GetFolder" value="SELECT DISTINCT FolderId FROM Leasing.LeaseFolder WHERE LeaseId=@LeaseId;"></add>
  <add key="GetModule" value="SELECT DISTINCT mod.Id,mod.Code FROM Module mod JOIN UserModule um ON mod.Id = um.ModuleId WHERE um.UserId=@UserId;"></add>
  <add key="GetUserContext" value="SELECT u.Name,up.FirstName,up.LastName,up.Address1,up.Address2,up.City,up.State,up.Zipcode,up.Email,up.Phone,u.IsFirstLogin,u.Status,u.ExpiresOn,up.Image FROM UserProfile up JOIN Users u ON up.UserId=u.Id WHERE u.Id=@UserId;"></add>
  <add key="GetGroups" value="SELECT DISTINCT g.Name FROM [Group] g JOIN Groups_Users gu ON g.Id=gu.Group_Id WHERE gu.User_Id = @UserId AND g.Status = 'Active';"></add>
  <add key="GetRoles" value="SELECT DISTINCT r.Name FROM Roles r JOIN Groups_Roles gr ON r.Id=gr.Role_Id JOIN Groups_Users gu ON gr.Group_Id=gu.Group_Id WHERE gu.User_Id=@UserId AND r.Status='Active';"></add>
  --><!--<add key="GetActions" value="SELECT DISTINCT a.ActionCode FROM [Action] a JOIN Leasing.Role_Action ra ON a.Id=ra.ActionId JOIN Groups_Roles gr ON ra.RoleId=gr.Role_Id JOIN Groups_Users gu ON gr.Group_Id=gu.Group_Id WHERE gu.User_Id=@UserId AND a.Status='Active';"></add>--><!--
  <add key="GetFolders" value="SELECT DISTINCT f.Id,f.Folder FROM Leasing.Folder f JOIN GroupFolders gf ON f.Id=gf.FolderId JOIN [Group] g ON gf.GroupId=g.Id JOIN Groups_Users gu ON g.Id=gu.Group_Id WHERE gu.User_Id=@UserId AND g.GroupTypeId=@GroupType AND g.Status='Active';"></add>
  <add key="VerifyUserControl" value="SELECT Id FROM ControlUsers WHERE Email=@Email;"></add>
  <add key="GetToken" value="SELECT UserId,Email,Token,TokenExpiry,TokenDuration,Status,InstanceCode,ModuleCode,IPAddress FROM UserToken WHERE Token = @Token and IpAddress=@IPAddress"></add>
  <add key="UpdateToken" value="UPDATE UserToken SET TokenExpiry=DATEADD(MINUTE,@ExtendTime,GETDATE()) WHERE Token = @Token and IPAddress=@IPAddress"></add>
  <add key="GetActions" value="SELECT ua.ActionCode FROM UserToken AS ut JOIN UserActions AS ua ON ut.UserId = ua.UserId WHERE ut.Token=@Token"></add>

	  <add key="AddUserType" value="INSERT INTO [dbo].[UserType]([UserType],[IsActive])VALUES(@UserType,@IsActive);"></add>
	  <add key="DuplicateUserTypeCheck" value="SELECT UserType FROM UserType WHERE UserType=@UserType;"></add>
	  <add key="UpdateUserType" value="UPDATE [dbo].[UserType] SET [UserType] = @UserType, [IsActive]=@IsActive WHERE Id=@Id;"></add>
	  <add key="InActiveUserType" value="UPDATE [dbo].[UserType] SET [IsActive] = @IsActive  WHERE Id=@Id;"></add>
	  <add key="GetUserType" value="SELECT Id,UserType,IsActive FROM UserType;"></add>
	  <add key="GetUserTypeById" value="SELECT UserType,IsActive FROM UserType WHERE Id=@UserTypeId;"></add>
	  <add key="GetInstanceByUserId" value="SELECT Instance_Id FROM Users_Instance WHERE User_Id=@UserId;"></add>
	  <add key="GetOrganisationByUserId" value="  select Org.OrgGUID from Organization as Org join OranizationUsers as OrgUser on Org.Id = OrgUser.OrganizationId where OrgUser.UserId=@UserId;"></add>

    <add key="CheckGroupDuplicate" value="SELECT Id FROM Groups_Users WHERE User_Id=@User_Id and Group_Id=@Group_Id;"></add>
    <add key="InsertUserGroup" value="INSERT INTO Groups_Users ([User_Id],[Group_Id],[CreatedOn],[CreatedBy])VALUES(@User_Id,@Group_Id,@CreatedOn,@CreatedBy);"></add>
    <add key="DeleteUserGroup" value="DELETE FROM Groups_Users WHERE User_Id=@User_Id and Group_Id=@Group_Id;"></add>


    <add key="CheckOrgnizationDuplicate" value="SELECT Id FROM OranizationUsers WHERE UserId=@UserId and OrganizationId=@OrganizationId;"></add>
    <add key="InsertUserOrgnization" value="INSERT INTO OranizationUsers ([OrganizationId], [UserId])VALUES(@OrganizationId,@UserId);"></add>
    <add key="DeleteUserOrgnization" value="DELETE FROM OranizationUsers WHERE UserId=@UserId and OrganizationId=@OrganizationId;"></add>
    
  </UserQueryConfigurations>

	<DepartmentQueryConfigurations>
		<add key="GetAllDepartment" value="SELECT dp.Id,dp.Name,dp.Status,mo.Code,mo.Name,mo.Id as ModuleId FROM Department dp left outer join Module mo on dp.Module=mo.Id  WHERE Status=@Status;"></add>
		<add key="GetDepartment" value="SELECT dp.Id,dp.Name,dp.Status,mo.Code,mo.Name,mo.Id as ModuleId FROM Department dp left outer join Module mo on dp.Module=mo.Id  WHERE Id=@DepartmentId;"></add>
		<add key="DepartmentCheckDuplicate" value="SELECT Id FROM Department WHERE Name=@DepartmentName and ModuleCode=@ModuleCode;"></add>
		<add key="AddDepartment" value="INSERT INTO Department(Name,Status,CreatedOn,CreatedBy,Module)VALUES(@DepartmentName,@Status,@CreatedOn,@CreatedBy,select Id from Module where Code=@ModuleCode) Select @@Identity;"></add>
		<add key="UpdateDepartment" value="UPDATE Department SET Name=@DepartmentName, Status=@Status WHERE Id=@DepartmentId;"></add>
		<add key="DeleteDepartment" value="UPDATE Department SET Status=@Status WHERE Id=@DepartmentId;"></add>
	</DepartmentQueryConfigurations>

	<DesignationQueryConfigurations>
		<add key="GetAllDesignation" value="SELECT dp.Id,dp.Designation,dp.Status,mo.Code,mo.Name,mo.Id as ModuleId FROM Designation dp left outer join Module mo on dp.Module=mo.Id  WHERE Status=@Status;"></add>
		<add key="GetDesignation" value="SELECT dp.Id,dp.Designation,dp.Status,mo.Code,mo.Name,mo.Id as ModuleId FROM Designation dp left outer join Module mo on dp.Module=mo.Id  WHERE dp.Id=@DesignationId;"></add>
		<add key="DesignationCheckDuplicate" value="SELECT Id FROM Designation WHERE Designation=@DesignationName and Module=@ModuleCode;"></add>
		<add key="AddDesignation" value="INSERT INTO Designation(Designation,Status,CreatedOn,CreatedBy,Module)VALUES(@DesignationName,@Status,@CreatedOn,@CreatedBy,select Id from Module where Code=@ModuleCode) Select @@Identity;"></add>
		<add key="UpdateDesignation" value="UPDATE Designation SET Designation=@DesignationName, Status=@Status WHERE Id=@DepartmentId;"></add>
		<add key="DeleteDesignation" value="UPDATE Designation SET Status=@Status WHERE Id=@DesignationId;"></add>
		<add key="AddDesignation" value="INSERT INTO Designation(Designation,Status,CreatedOn,CreatedBy,Module)VALUES(@Designation,@Status,@CreatedOn,@CreatedBy,(select Id from Module where Code=@ModuleCode)) Select @@Identity;"></add>
	</DesignationQueryConfigurations>

  <ModuleQueryConfigurations>
    <add key="GetModuleDetails" value="SELECT Id, Name, Code, Description FROM [Module];"></add>
    <add key="GetModulesLinkedtoUser" value="Select u.Id, u.Name as UserName, um.ModuleId, m.Name as ModuleName from [Users] u LEFT OUTER JOIN [UserModule] um  ON u.Id = um.UserId  LEFT OUTER JOIN Module m ON m.Id = um.ModuleId;"></add>
    <add key="AddModuleToUser" value="INSERT INTO [UserModule] (UserId,ModuleId) VALUES (@UserId,@ModuleId);"></add>
    <add key="RemoveModuleFromUser" value="DELETE FROM [UserModule] WHERE UserId=@UserId AND ModuleId=@ModuleId"></add>
  </ModuleQueryConfigurations>-->

  <OrganizationQueryConfigurations>
    <!--<add key="GetAllorganizations" value="Select Org.Id, Org.OrgGUID, Org.Name, Org.Description, Org.Logo, Org.Email, Org.Website, Org.AdminId, Org.IsActive, Org.IsDeleted, Org.IsTaxExcempt, Org.CreatedBy, Org.CreatedOn, Org.ModifiedBy, Org.ModifiedOn, Org.OrganizationCode, Org.CurrencyId, ContrOrg.Id AS ControlOrgId, Org.HasDeliveryCharge, Org.BackgroundColor from Organization AS Org inner join ControlBook.dbo.Organization AS ContrOrg ON ContrOrg.OrgGUID = Org.OrgGUID WHERE Org.IsDeleted != 1;"></add>
    <add key="GetAllorganizations" value="Select Org.Id, Org.OrgGUID, Org.Name, Org.Description, Org.Logo, Org.Email, Org.Website, Org.AdminId, Org.IsActive, Org.IsDeleted, Org.IsTaxExcempt, Org.CreatedBy, Org.CreatedOn, Org.ModifiedBy, Org.ModifiedOn, Org.OrganizationCode, Org.CurrencyId, ContrOrg.Id AS ControlOrgId, Org.HasDeliveryCharge, Org.BackgroundColor from Organization AS Org inner join ControlBook.dbo.Organization AS ContrOrg ON ContrOrg.OrgGUID = Org.OrgGUID WHERE Org.IsDeleted != 1;"></add>-->
    <add key="GetAllorganizations" value="Select Org.Id, Org.OrgGUID, Org.Name, Org.Description, Org.Logo, Org.Email, Org.Website, Org.AdminId, Org.IsActive, Org.IsDeleted, Org.IsTaxExcempt, Org.CreatedBy, Org.CreatedOn, Org.ModifiedBy, Org.ModifiedOn, Org.OrganizationCode, Org.HasDeliveryCharge, Org.BackgroundColor from Organization AS Org  WHERE Org.IsDeleted != 1;"></add>
    <!--<add key="GetAdminOrganizationList" value="Select Org.Id, Org.OrgGUID, Org.Name, Org.Description, Org.Logo, Org.Email, Org.Website, Org.AdminId, Org.IsActive, Org.IsDeleted, Org.IsTaxExcempt, Org.CreatedBy, Org.CreatedOn, Org.ModifiedBy, Org.ModifiedOn, Org.OrganizationCode, Org.HasDeliveryCharge from Organization AS Org WHERE Org.OrgGUID = @OrganizationGUID;"></add>-->
    <add key="GetAdminOrganizationList" value="Select Org.Id, Org.OrgGUID, Org.Name, Org.Description, Org.Logo, Org.Email, Org.Website, Org.AdminId, Org.IsActive, Org.IsDeleted, Org.IsTaxExcempt, Org.CreatedBy, Org.CreatedOn, Org.ModifiedBy, Org.ModifiedOn, Org.OrganizationCode, Org.HasDeliveryCharge, Org.BackgroundColor 
from Organization AS Org
              Left join OrganizationUsers OU on Org.Id=OU.OrganizationId
              where OU.UserId=@UserId"></add>

    <add key="GetAllOrganizationInfoById" value="Select distinct o.Id, OrgGUID, O.Name, Description, Logo, Email, Website, AdminId, IsActive, O.IsDeleted, IsTaxExcempt, O.CreatedBy, O.CreatedOn, 
O.ModifiedBy, O.ModifiedOn, OrganizationCode, HasDeliveryCharge, BackgroundColor,F.PhysicallFolderName,D.UploadedFileName,O.OrganizationMessage 
from Organization O
LEFT JOIN DocumentsMapping DM on O.Id=DM.ObjectId AND DM.DocumentType='ORGANIZATION_LOGO' AND DM.ObjectType='ORGANIZATION'
LEFT JOIN DMS.Document D ON DM.DocumentId=D.Id
LEFT JOIN DMS.Folder F ON D.FolderId=F.Id
WHERE OrgGUID = @OrganisationId;"></add>
    <add key="GetAllOrganizationInfoByIdOrCode" value="WITH CTE(Id,OrgId)
AS 
(
SELECT top 1 E.Id,O.Id as OrgId FROM Event.Events E
INNER JOIN Organization O ON E.OrganisationID=O.Id
WHERE (OrgGUID = @OrganisationId OR OrganizationCode=@OrganisationId )AND E.EventType='INVITATION'
)
Select distinct O.Id, OrgGUID, O.Name, Description, Logo, Email, Website, AdminId, IsActive, O.IsDeleted, IsTaxExcempt, O.CreatedBy, O.CreatedOn, 
              O.ModifiedBy, O.ModifiedOn, OrganizationCode, HasDeliveryCharge, BackgroundColor,D.UploadedFileName,F.PhysicallFolderName,CTE.Id as HasPrivateEvent 
              from Organization O
			  LEFT JOIN CTE ON O.Id=CTE.OrgId
              Left JOIN DocumentsMapping DM ON O.Id=DM.ObjectId AND DM.ObjectType='ORGANIZATION' AND DM.DocumentType='ORGANIZATION_LOGO'
              LEFT JOIN DMS.Document D ON DM.DocumentId=D.Id
              LEFT JOIN DMS.Folder F ON D.FolderId=F.Id
              WHERE OrgGUID = @OrganisationId OR OrganizationCode=@OrganisationId;">
    </add>
    <add key="GetControlDBOrganization" value="Select Id, Name, InstanceId, Address_Id from Organization WHERE OrgGUID = @OrgGUID;"></add>
    <add key="AddOrganizationDetail" value="INSERT INTO Organization (Name, Description, OrgGUID, Logo, Email, Website, AdminId, IsActive, IsDeleted, IsTaxExcempt, CreatedBy, CreatedOn, OrganizationCode, SequnceNumber, HasDeliveryCharge, BackgroundColor,InstanceId,AddressId) VALUES (@Name, @Description, @OrgGUID, @Logo, @Email, @Website, @AdminId, @IsActive, @IsDeleted, @IsTaxExcempt, @CreatedBy, @CreatedOn, @OrganizationCode, @SequnceNumber, @HasDeliveryCharge, @BackgroundColor,@InstanceId,@AddressId) Select @@Identity;"></add>
    <!--<add key="AddorganizationDetailsControl" value="INSERT INTO Organization (OrgGUID, Name, InstanceId, IsActive, IsDeleted, IsTaxExcempt, CreatedBy, CreatedOn, Address_Id) VALUES (@OrgGUID, @Name, @InstanceId, @IsActive, @IsDeleted, @IsTaxExcempt, @CreatedBy, @CreatedOn, @Address_Id);Select @@Identity;"></add>-->
    <add key="UpdateOrganizationDetail" value="UPDATE Organization set Name = @Name, Description = @Description, Logo = @Logo, Email = @Email, Website = @Website, AdminId = @AdminId, IsActive = @IsActive, IsDeleted = @IsDeleted, IsTaxExcempt = @IsTaxExcempt, ModifiedBy = @ModifiedBy, ModifiedOn = @ModifiedOn, HasDeliveryCharge = @HasDeliveryCharge, BackgroundColor=@BackgroundColor,OrgHomeRedirect=@OrgHomeRedirect,BookDisplayMode=@BookDisplayMode,OrganizationMessage=@OrgMessage WHERE OrgGUID = @organisationId;"></add>
    <add key="UpdateOrganizationDetailControl" value="UPDATE Organization set Name = @Name, InstanceId = @InstanceId, IsActive = @IsActive, IsDeleted = @IsDeleted, IsTaxExcempt = @IsTaxExcempt WHERE OrgGUID = @OrgGUID;"></add>
    <add key="RemoveOrganization" value="UPDATE Organization set IsDeleted = 1 WHERE Id = @OrganizationId;"></add>
    <add key="RemoveOrganizationInfo" value="UPDATE Organization set IsDeleted = 1 WHERE OrgGUID = @OrgGUID;"></add>
    <add key="RemoveControlOrganizationInfo" value="UPDATE Organization set IsDeleted = 1 WHERE OrgGUID=@OrgGUID;"></add>
    <add key="AddorganizationUserDetailsControl" value="INSERT INTO OrganizationUsers (UserId, OrganizationId) VALUES (@UserId, @OrganizationId);"></add>
    <add key="RemoveOrganizationUserInfo" value="DELETE FROM OranizationUsers WHERE Id = @Id;"></add>
    <add key="CheckDuplicateOrgCode" value="SELECT OrganizationCode from Organization where OrganizationCode=@OrganizationCode and IsDeleted = 0;"></add>
    <add key="RemoveErrorOrganization" value="DELETE FROM Organization WHERE Id = @OrganizationId;"></add>
    <!-- Organization Attributes -->
    <add key="GetAllOrganizationAttribute" value="SELECT oa.Id, oa.Name, oa.Description, oa.Label, oa.IsActive, oa.IsRepeated, oa.IsRequired, oa.AttributeControlTypeId, oa.ObjectType, oa.DisplayOrder, oa.AttributeCode, oa.CreatedBy, oa.CreatedOn, oa.ModifiedBy, oa.ModifiedOn, act.AttributeControlType FROM Organization_Attribute oa inner join AttributeControlType act ON oa.AttributeControlTypeId = act.Id"></add>
    <add key="AddOrganizationAttributes" value="INSERT INTO Organization_Attribute(Name, Description, Label, IsActive, IsRepeated, IsRequired, AttributeControlTypeId, ObjectType, DisplayOrder, AttributeCode, CreatedBy, CreatedOn) VALUES(@Name, @Description, @Label, @IsActive, @IsRepeated, @IsRequired, @AttributeControlTypeId, @ObjectType, @DisplayOrder, @AttributeCode, @CreatedBy, @CreatedOn); SELECT @@Identity"></add>
    <add key="UpdateOrganizationAttributes" value="UPDATE Organization_Attribute SET Name = @Name, Description = @Description, Label = @Label, IsActive = @IsActive, IsRequired = @IsRequired, AttributeCode = @AttributeCode, AttributeControlTypeId = @AttributeControlTypeId, IsRepeated = @IsRepeated, ObjectType = @ObjectType, DisplayOrder = @DisplayOrder, ModifiedBy = @ModifiedBy, ModifiedOn = @ModifiedOn WHERE Id = @Id;"></add>
    <add key="RemoveOrganizationAttribute" value="Update Organization_Attribute SET IsActive = 0 WHERE Id = @Id;"></add>
    
    <!-- Organization Attribute Option -->
    <add key="AddOrgAttributeOption" value="INSERT INTO [dbo].[Organization_AttributeOptions]([AttributeId],[AttributeListValue],[AttributeListText]) VALUES(@AttributeId,@AttributeListValue,@AttributeListText);"></add>
    <add key="GetOrgAttributeOptionByAttId" value="SELECT Id, AttributeListValue FROM Organization_AttributeOptions WHERE AttributeId=@AtttributeId;"></add>
    <add key="UpdateOrgAttributeOption" value="UPDATE Organization_AttributeOptions SET AttributeListValue=@AttributeListValue WHERE Id=@Id;"></add>
    <add key="DeleteOrgAttributeOption" value="DELETE FROM Organization_AttributeOptions WHERE Id=@Id;"></add>
    
    <!-- Organization Type -->
    <add key="GetAllOrgTypes" value="SELECT Id, Name, Code from OrganizationType;"></add>
    <add key="GetAllMappedTypes" value="SELECT ot.Id as typeId, otm.Id, ot.Name, ot.Code from OrganizationType ot inner join OrganizationTypeMapping otm ON otm.OrgTypeId = ot.Id WHERE otm.OrganizationId = @OrganizationId;"></add>
    <!-- Organization Type Mapping -->
    <add key="AddOrgTypeMapping" value="INSERT INTO OrganizationTypeMapping (OrgTypeId, OrganizationId)VALUES(@OrgTypeId, @OrganizationId);"></add>
    <add key="RemoveOrgTypeMapping" value="DELETE FROM OrganizationTypeMapping WHERE Id = @Id;"></add>
    <add key="checkDuplicateOrgType" value="SELECT * from OrganizationTypeMapping WHERE OrgTypeId = @OrgTypeId AND OrganizationId = @OrganizationId;"></add>    
  </OrganizationQueryConfigurations>

  <AddressQueryConfiguration>
    <add key="GetAddressById" value="SELECT Id, FirstName, LastName, CountryId, StateProvinceId, City, Address1, Address2, ZipPostalCode, Longitude, Latitude, CustomAttributes, CreatedOn, CreatedBy, ModifiedOn, ModifiedBy from Address WHERE Id = @AddressId;"></add>
    <add key="GetAddressByOrgGuid" value="SELECT a.Id, a.FirstName, a.LastName, a.CountryId, a.StateProvinceId, a.City, a.Address1, a.Address2, a.ZipPostalCode, a.Longitude, a.Latitude, a.CustomAttributes, a.CreatedOn, a.CreatedBy, a.ModifiedOn, a.ModifiedBy, cou.Name as CountryName, a.StateProvinceId as StateProvinceName from [Address] as a inner join Organization On Organization.AddressId = a.Id INNER JOIN Country as cou ON cou.Id = a.CountryId WHERE Organization.OrgGUID = @OrgGUID;"></add>
    <add key="AddAddressDetails" value="INSERT INTO Address (FirstName, LastName, CountryId, StateProvinceId, City, Address1, Address2, ZipPostalCode, Longitude, Latitude, CustomAttributes, CreatedOn, CreatedBy) VALUES (@FirstName, @LastName, @CountryId, @StateProvinceId, @City, @Address1, @Address2, @ZipPostalCode, @Longitude, @Latitude, @CustomAttributes, @CreatedOn, @CreatedBy); Select @@Identity;"></add>
    <add key="UpdateAddressDetails" value="UPDATE Address set FirstName = @FirstName, LastName = @LastName, CountryId = @CountryId, StateProvinceId = @StateProvinceId, City = @City, Address1 = @Address1, Address2 = @Address2, ZipPostalCode = @ZipPostalCode, Longitude = @Longitude, Latitude = @Latitude, CustomAttributes = @CustomAttributes, ModifiedBy = @ModifiedBy, ModifiedOn = @ModifiedOn WHERE Id = @AddressId;"></add>
    <add key="RemoveAddressInfo" value="DELETE FROM Address WHERE Id = @AddressId;"></add>
  </AddressQueryConfiguration>
  
  <PhoneQueryConfiguration>
    <add key="AddPhoneNumber" value="INSERT INTO common.Phone (PhoneType, PhoneNumber, Extn, ContactType, ContactId, IsPrimary) VALUES (@PhoneType, @PhoneNumber, @Extn, @ContactType, @ContactId, @IsPrimary);Select @@Identity;"></add>
    <add key="GetAllPhoneDetails" value="SELECT Id, PhoneType, PhoneNumber, Extn, ContactType, ContactId, IsPrimary FROM common.Phone WHERE ContactType = @ContactType AND ContactId = @ContactId;"></add>
    <add key="GetPhoneDetails" value="Select p.Id, p.PhoneType, p.PhoneNumber, p.Extn, p.ContactType, p.ContactId, p.IsPrimary from common.Phone p WHERE p.ContactId=@OrganizationId AND p.ContactType = @ContactType;"></add>
    <add key="UpdatePhoneDetails" value="UPDATE Common.Phone set PhoneType = @PhoneType, PhoneNumber = @PhoneNumber, Extn = @Extn, IsPrimary = @IsPrimary Where Id = @phoneId;"></add>
    <add key="DeletePhoneDetails" value="DELETE FROM Common.Phone WHERE Id = @Id;"></add>
  </PhoneQueryConfiguration>
  
  <EcommAttributeMasterLogQueryConfigurations>
		<add key="AddAttributeMaster" value="INSERT INTO [dbo].[Attribute]([Name],[Description],[Label],[IsActive],[IsRequired],[AttributeGroupId]
,[AttributeControlTypeId],[IsRepeated],[ObjectType],[DisplayOrder],[CreatedBy],[CreatedOn])VALUES(@Name, @Description,@Label, @IsActive, @IsRequired, @AttributeGroupId, @AttributeControlTypeId, @IsRepeated,@ObjectType,@DisplayOrder,@CreatedBy,@CreatedOn);"></add>
	  
	  <add key="GetAttributeMaster" value="SELECT Att.Id,Att.Name,Att.Description ,Att.Label,Att.IsActive,Att.IsRequired,Att.AttributeSectionId, AttGrp.AttributeSection, AttGrp.DisplayText,Att.AttributeControlTypeId
,Att.IsRepeated,Att.DisplayOrder,Att.CreatedBy,Att.CreatedOn,Att.ModifiedBy,Att.ModifiedOn, AttCtrl.AttributeControlType FROM dbo.Attribute AS Att join AttributeControlType AS AttCtrl ON AttCtrl.Id = Att.AttributeControlTypeId JOIN AttributeSection as AttGrp on AttGrp.Id  = Att.AttributeSectionId ;"></add>
	  
	  <add key="GetAttributeMasterById" value="SELECT Att.Id,Att.Name,Att.Description ,Att.Label,Att.IsActive,Att.IsRequired,Att.AttributeSectionId, AttGrp.AttributeSection, AttGrp.DisplayText,Att.AttributeControlTypeId
,Att.IsRepeated,Att.DisplayOrder,Att.CreatedBy,Att.CreatedOn,Att.ModifiedBy,Att.ModifiedOn, AttCtrl.AttributeControlType FROM dbo.Attribute AS Att join AttributeControlType AS AttCtrl ON AttCtrl.Id = Att.AttributeControlTypeId JOIN AttributeSection as AttGrp on AttGrp.Id  = Att.AttributeSectionId WHERE Att.Id=@Id;"></add>
	  
	  <add key="DuplicateAttributeCheck" value="SELECT Name FROM Attribute WHERE Name=@Name;"></add>
	  
	  <add key="UpdateAttributeMaster" value="UPDATE Attribute SET Name=@Name,Label=@Label,[Description]=@Description,AttributeGroupId=@AttributeGroupId, AttributeControlTypeId=@AttributeControlTypeId,IsRepeated=@IsRepeated,ModifiedBy=@ModifiedBy,ModifiedOn=@ModifiedOn WHERE Id=@Id;"></add>

	  <add key="InActiveAttributeMaster" value="UPDATE Attribute SET IsActive='true' WHERE Id=@Id;"></add>
	  
	  <add key="AddAttributeOption" value="INSERT INTO [dbo].[AttributeOptions]([AttributeId],[AttributeListValue],[AttributeListText])
VALUES(@AttributeId,@AttributeListValue,@AttributeListText);"></add>

	  <add key="GetAttributeOptionByAttId" value="SELECT Id, AttributeListValue FROM AttributeOptions WHERE AttributeId=@AtttributeId;"></add>

	  <add key="UpdateAttributeOption" value="UPDATE AttributeOptions SET AttributeListValue=@AttributeListValue WHERE Id=@Id;"></add>

	  <add key="DeleteAttributeOption" value="DELETE FROM AttributeOptions WHERE Id=@Id;"></add>

	  <add key="GetUserAttibuteByUserId" value="SELECT DISTINCT AttSec.Id AS AttributeSectionId,AttSec.AttributeSection, AttSec.DisplayText,ArrCtrl.Id AS ControlTypeId,ArrCtrl.AttributeControlType, Att.Id AS AttributeId ,Att.Name,Att.Description,Att.Label,Att.IsActive,Att.IsRequired,AttSec.IsRepeated,Att.ObjectType,Att.DisplayOrder,Att.CreatedOn,Att.CreatedBy,Att.ModifiedBy, Att.ModifiedOn FROM Attribute AS Att JOIN Group_Attribute_Mapping AS GrAtt ON Att.Id = GrAtt.AttributeId JOIN AttributeSection AS AttSec ON Att.AttributeSectionId = AttSec.Id  JOIN AttributeControlType AS ArrCtrl ON ArrCtrl.Id = Att.AttributeControlTypeId WHERE GrAtt.GroupId IN (SELECT Group_Id FROM Groups_Users WHERE User_Id=@User_Id) order by Att.Id;"></add>

	  <add key="GetUserAttibuteValue" value="SELECT AttVal.Id,AttVal.UserAttributeId,AttVal.UserId,AttVal.AttributeOptionId,AttVal.Value,AttVal.DisplayOrder,AttVal.[Collection] FROM  AttributeValue AS AttVal JOIN Attribute AS Att ON Att.Id = AttVal.UserAttributeId JOIN AttributeSection AS AttSec ON AttSec.Id = Att.AttributeSectionId WHERE AttVal.UserId=@User_Id AND  AttSec.Id=@SectionId order by Att.Id;"></add>
	  
	</EcommAttributeMasterLogQueryConfigurations>

  <ControlMasterQueryConfigurations>
    <add key="GetAllCountries" value="SELECT Id, Name, AllowsBilling, AllowsShipping, TwoLetterIsoCode, ThreeLetterIsoCode, NumericIsoCode, SubjectToVat, Published, DisplayOrder, LimitedToStores FROM Country;"></add>
    <add key="GetAllStateDetails" value="SELECT Id, CountryId, Name, Abbreviation, Published, DisplayOrder FROM StateProvince WHERE CountryId = @CountryCode;"></add>
    
    <!-- Attribute Section -->
    <add key="GetAllAttributes" value="SELECT Id, AttributeSection, DisplayText, DisplayOrder, IsRepeated FROM AttributeSection;"></add>
    <add key="GetAttributesById" value="SELECT Id, AttributeSection, DisplayText, DisplayOrder, IsRepeated FROM AttributeSection WHERE Id = @Id;"></add>
    <add key="AddAttributeSectionDetails" value="INSERT INTO AttributeSection(AttributeSection, DisplayText, DisplayOrder, IsRepeated) VALUES (@AttributeSection, @DisplayText, @DisplayOrder, @IsRepeated);SELECT @@Identity;"></add>
    <add key="UpdateAttributeSectionDetails" value="UPDATE AttributeSection SET AttributeSection = @AttributeSection, DisplayText = @DisplayText, DisplayOrder = @DisplayOrder, IsRepeated = @IsRepeated WHERE Id = @Id;"></add>
    <add key="GetAttributeMapping" value="SELECT Id FROM Attribute WHERE AttributeSectionId = @Id;"></add>
    <add key="RemoveAttributeSection" value="DELETE FROM AttributeSection WHERE Id = @Id;"></add>
    <!-- Instance -->
	  <add key="GetInstanceDetails" value="SELECT Id,Name FROM InstanceDetails;"></add>
	  <add key="DuplicateUserInstanceMap" value="SELECT Id FROM dbo.Users_Instance WHERE User_Id=@UserId and Instance_Id=@InstanceId;"></add>
	  <add key="UserInstanceMapping" value="INSERT INTO [dbo].[Users_Instance]([User_Id],[Instance_Id])VALUES(@UserId,@InstanceId)"></add>
	  <add key="UserInstanceUnMapping" value="DELETE FROM dbo.Users_Instance WHERE User_Id=@UserId and Instance_Id=@InstanceId;"></add>
    <add key="GetInstanceList" value="SELECt Id, Name, Code from InstanceDetails;"></add>
    <add key="InstanceDetails" value="SELECT Code from InstanceDetails WHERE Id = @Id;"></add>
    <add key="UpdateActivity" value="IF (@BookId IS not null)
        BEGIN
        	Insert into common.ActivitiesLog (Activity,UserId,CreatedOn,BookId,CreatedOnTimeId,UserAgent)
        VALUES
        (@Activity,@UserId,GETDATE(),(SELECT Id FROM Book WHERE BookGUID=@BookId),(SELECT ID FROM [dbo].[TimeDimension] WHERE (convert(DATE,[Date], 120))=convert(DATE, GETDATE(), 120)),@UserAgent);
        END
        ELSE
        BEGIN
        	Insert into common.ActivitiesLog (Activity,UserId,CreatedOn,BookId,CreatedOnTimeId,UserAgent)
        VALUES
        (@Activity,@UserId,GETDATE(),NULL,(SELECT ID FROM [dbo].[TimeDimension] WHERE (convert(DATE,[Date], 120))=convert(DATE, GETDATE(), 120)),@UserAgent);
        END">
    </add>
  </ControlMasterQueryConfigurations>
	<UserAttributeValueLogQueryConfigurations>
		<add key="GetAttributeSectionCount" value="SELECT [Count] FROM AttributeSection WHERE IsRepeated=1 and Id=@Id;"></add>

		<add key="AddUserAttributeValue" value="INSERT INTO [dbo].[AttributeValue]([UserAttributeId],[UserId],[AttributeOptionId],[Value],[IsPreSelected],[DisplayOrder],[Collection])VALUES(@UserAttributeId, @UserId, @AttributeOptionId,@Value,@IsPreSelected, @DisplayOrder, @Collection);"></add>



		<add key="EditUserAttributeValue" value="UPDATE AttributeValue SET AttributeOptionId=@AttributeOptionId, Value=@Value WHERE UserId=@UserId AND UserAttributeId=@UserAttributeId and [Collection]=@Collection" ></add>

		<add key="DeleteUserAttributeValue" value="DELETE AttributeValue WHERE UserId=@UserId AND UserAttributeId=@UserAttributeId and [Collection]=@Collection"></add>

		<add key="DeleteUserAttributeValueSection" value="DELETE AttributeValue WHERE UserId=@UserId AND [Collection]=@Collection"></add>
		
		<add key="UpdateAttributeSection" value="UPDATE AttributeSection SET [Count]=@Count WHERE Id=@Id"></add>
	</UserAttributeValueLogQueryConfigurations>

  <CustomerQueryConfigurations>
    <add key="AddCustomer" value="INSERT INTO Common.Users([CustomerGuid],[Email],[Password] ,[Salt],[IsActive],[Deleted]
,[LastIpAddress],[CreatedOn] ,[IsFirstLogin],[IsGuest],[OTP],[IsOTPVerified],[IsAdmin],[PhoneNumber],UserType,Status) VALUES (@CustomerGuid,@Email, 
@Password,@Salt,@IsActive,@Deleted,@LastIpAddress,@CreatedOn,@IsFirstLogin,@IsGuest,@OTP,@IsOTPVerified,@IsAdmin,@PhoneNumber,(Select Id from COmmon.UserTypes where UserType='Customer'),'Active');SELECT @@Identity;"></add>
    <add key="AddCustomerAddresses" value="INSERT INTO CustomerAddresses(CustomerId,Address1,Address2,ZipPostalCode,City,StateId,CountryId,Longitude, Latitude, isDelivery, isInvoice,CustomerName,AddressNote,PhoneNumber)VALUES((SELECT Id FROM Common.Users WHERE CustomerGuid= @CustomerId),@Address1,@Address2,@ZipPostalCode,@City,@StateId,@CountryId,@Longitude,@Latitude,@isDelivery,@isInvoice,@CustomerName,@AddressNote,@PhoneNumber);SELECT @@Identity;"></add>
    <add key="AddCustomerProfile" value="INSERT INTO Common.UserProfile( CustomerId,FirstName,MiddleName,LastName,Email,Phone1,Phone2,Image,DOB,CountryId)VALUES(@CustomerId,@FirstName,@MiddleName,@LastName,@Email,@Phone1,@Phone2,@Image,@DOB,@Country);SELECT @@Identity;"></add>
    <add key="AddCustomerSocial" value="INSERT INTO CustomerSocial(CustomerId,SocialMediaTypeId,SocialMediaTypeName)VALUES(@CustomerId,@SocialMediaTypeId,@SocialMediaTypeName);SELECT @@Identity;"></add>
    <add key="ISExistsSocialMedia" value="SELECT TOP 1 SocialMediaTypeId FROM CustomerSocial WHERE SocialMediaTypeId=@Id"/>
    <add key="GetSocialMedia" value="SELECT Id FROM CustomerSocial WHERE SocialMediaTypeId=@Id"/>
    <add key="GetUserAddress" value="SELECT ca.Id, CU.CustomerGuid as CustomerId, ca.CustomerName, ca.Address1, ca.Address2, ca.ZipPostalCode, ca.City, ca.StateId, ca.CountryId, ca.Longitude, ca.Latitude, ca.isDelivery, ca.isInvoice, ca.StateId as stateName, c.Name as CountryName, ca.AddressNote, ca.PhoneNumber FROM CustomerAddresses ca 
INNER JOIN Common.Users CU ON ca.CustomerId=CU.Id
inner join Country c on c.Id = ca.CountryId WHERE ca.Id = @addressId"></add>
    <add key="GetCustomerDetails" value="SELECT CP.Id,CustomerId,CP.FirstName,CP.MiddleName,CP.LastName,CP.Email,CP.Phone1,CP.Phone2,CP.Image,CP.DOB,CT.Id as CountryId,CT.Name as CountryName 
FROM Common.UserProfile CP
INNER JOIN Common.Users C ON CP.CustomerId=C.Id
INNER JOIN Country CT ON CP.CountryId=CT.Id
WHERE C.CustomerGuid = @CustomerId">
    </add>
    <add key="GetCustomerDetailsByEmail" value="SELECT C.Id,C.Username,CP.FirstName,C.Email,C.Salt,C.IsActive,C.IsFirstLogin,C.Password,C.OTP,C.IsOTPVerified FROM Common.Users C LEFT JOIN Common.UserProfile  CP on C.Id=CP.CustomerId where C.Email=@Email" />
    <add key="IsVarifiedCustomer" value="SELECT C.Id FROM Common.Users C where C.Email=@Email AND C.IsOTPVerified=1" />
    <add key="ResetPassword" value="UPDATE Common.Users SET Password=@Password,Salt=@Salt,ModifiedOn=@ModifiedOn,IsFirstLogin=@IsFirstLogin,OTP = null, OTPExpiresOn = null WHERE Id = @CustomerId"></add>
    <add key="ResetCustomerPassword" value="UPDATE Common.Users SET Password=@Password,Salt=@Salt,ModifiedOn=@ModifiedOn,IsFirstLogin=@IsFirstLogin WHERE Id = (SELECT c.Id from Common.Users c join common.Users u on u.Name = c.Email and u.Id = @UserId);"></add>
    <add key="GetCustomerDetailsByPasswordResetCode" value="SELECT C.Id,C.Username,CP.FirstName,C.Email FROM Common.Users C LEFT JOIN Common.UserProfile  CP on C.Id=CP.CustomerId WHERE C.OTP=@PasswordResetCode and OTPExpiresOn &lt;= getdate()" />
    <add key="AddCustomerRole" value="INSERT INTO [dbo].[Group_Customer] (CustomerId, GroupId, CreatedOn, CreatedBy) VALUES (@CustomerId, @GroupId, @CreatedOn, @CreatedBy) SELECT @@Identity;"></add>
    <add key="RemoveCustomerRole" value="DELETE FROM [dbo].[Group_Customer] WHERE Id = @Id;"></add>
    <add key="AddAdminAsCustomer" value="DECLARE @GUID UNIQUEIDENTIFIER;
              DECLARE @CustomerId int;
              SET @GUID = NEWID()
              INSERT INTO [dbo].[Customer]([CustomerGuid],[Email],[Password] ,[Salt],[IsActive],[Deleted]
              , [CreatedOn] ,[IsFirstLogin],[IsGuest], [IsOTPVerified],[IsAdmin])
              SELECT  @GUID, name, password, salt, 1, 0 , GETDATE(), 0, 0,1,1 from common.Users where Name like @email 
              SELECT @CustomerId = @@IDENTITY;
              INSERT INTO Common.UserProfile( CustomerId,FirstName,MiddleName,LastName,Email, DOB,CountryId)
              SELECT @CustomerId,FirstName,MiddleName,LastName,Email,DOB,Country FROM common.UserProfile where Email like @email
              SELECT @@IDENTITY;"></add>
    <add key="CustomerAddressDetails" value="SELECT ca.Id, cd.CustomerGuid as CustomerId, ca.CustomerName, ca.Address1, ca.Address2, ca.ZipPostalCode, ca.City, ca.StateId, ca.CountryId, ca.Longitude,
 ca.Latitude, ca.isDelivery, ca.isInvoice, c.Name as CountryName, ca.AddressNote, ca.PhoneNumber, cd.Id as CustomerId, cd.Username, cd.Email 
 FROM CustomerAddresses ca 
 inner join Common.Users as cd ON cd.Id = ca.CustomerId
  inner join Country c on c.Id = ca.CountryId WHERE cd.CustomerGuid = @CustomerId and ca.isInvoice = 1;"></add>
    <add key="GetCustomerAllAddress" value="SELECT ca.Id, ca.CustomerId, ca.CustomerName, ca.Address1, ca.Address2, ca.ZipPostalCode, ca.City, ca.StateId, ca.CountryId, ca.Longitude, ca.Latitude, ca.isDelivery, ca.isInvoice, c.Name as CountryName, ca.AddressNote, ca.PhoneNumber FROM CustomerAddresses ca 
INNER JOIN Common.Users CU on ca.CustomerId=CU.Id
inner join Country c on c.Id = ca.CountryId WHERE CU.CustomerGuid= @customerId and ca.IsActive=1"></add>
    <add key="UpdateCustomerAddresses" value="UPDATE [dbo].[CustomerAddresses] SET Address1 = @Address1, Address2 = @Address2, ZipPostalCode = @ZipPostalCode, City = @City, StateId = @StateId, CountryId = @CountryId, Longitude = @Longitude, Latitude = @Latitude, isDelivery = @isDelivery, isInvoice = @isInvoice, CustomerName = @CustomerName, AddressNote = @AddressNote, PhoneNumber = @PhoneNumber WHERE Id = @Id;"></add>
	  <add key="UpdateDeliveryAddress" value="UPDATE [dbo].[CustomerAddresses] SET isDelivery = 0 WHERE CustomerId =(SELECT Id FROM Common.Users WHERE CustomerGuid= @CustomerId) AND isDelivery = 1;
              update C
              set C.ShippingAddressId=@Id
              from Cart C
                  inner join Common.Users c1 ON C.CustomerId=c1.Id
              	INNER JOIN Status s ON C.CartStatusId=s.Id
              	WHERE c1.CustomerGuid=@CustomerId AND s.Status_Code='CART_PROC'">
    </add>
    <add key="UpdateInvoiceAddress" value="UPDATE [dbo].[CustomerAddresses] SET isInvoice = 0 WHERE CustomerId =(SELECT Id FROM Common.Users WHERE CustomerGuid= @CustomerId) AND isInvoice = 1;
         update C
              set C.BillingAddressId=@Id
              from Cart C
                  inner join Common.Users c1 ON C.CustomerId=c1.Id
              	INNER JOIN Status s ON C.CartStatusId=s.Id
              	WHERE c1.CustomerGuid=@CustomerId AND s.Status_Code='CART_PROC'">
    </add>
    <add key="UpdateCustomerProfile" value="UPDATE [Common].[UserProfile] SET FirstName = @FirstName, MiddleName = @MiddleName, LastName = @LastName, Phone1 = @Phone1, Phone2 = @Phone2, DOB = @DOB,CountryId=@Country WHERE CustomerId = @CustomerId;"></add>   
    <add key="RemoveCustomerAddress" value="Update [dbo].[CustomerAddresses] set IsActive=0 WHERE Id = @Id;"></add>
    <add key="RemoveCustomerProfile" value="DELETE FROM [Common].[UserProfile] WHERE Id = @Id;"></add>
	  <add key="DuplicateCheckCustomer" value="SELECT U.Id FROM Common.Users U 
Inner JOIN [common].[UserTypes] UT ON U.UserTYpe=UT.Id
WHERE Email = @Email and UT.UserType='Customer'"></add>
	  <add key="VerifyCustomerOTP" value="DECLARE @Id INT;SELECT @Id = Id FROM Common.Users WHERE Email=@Email and OTP=@OTP
IF(@Id>0)BEGIN UPDATE Common.Users set IsOTPVerified=1 WHERE Email=@Email END;"></add>
	  <add key="ResendOTP" value="UPDATE Common.Users SET OTP=@OTP, IsOTPVerified=0 where Email=@Email;"></add>
    <add key="GetCustomerByMail" value="SELECT CustomerGuid, Username, Id FROM Common.Users WHERE Email = @Email;"></add>
    <add key="UpdatePasswordResetCode" value="Update Common.Users set OTP = @passwordResetCode, OTPExpiresOn = getdate() WHERE email = @email;"></add>
    <add key="CheckUserExist" value="SELECT c.Id FROM Common.Users AS c INNER JOIN [Common].[Users] AS u ON u.Name = c.Email WHERE u.Id = @userId;"></add>
    <add key="UpdateCustomerDetails" value="UPDATE Common.Users SET Deleted=@DeleteValue WHERE Id = @CustomerId;"></add>
    <add key="AddCustomerUser" value="INSERT INTO [dbo].[Customer]([CustomerGuid],[Email],[Password] ,[Salt],[IsActive],[Deleted],[LastIpAddress],[CreatedOn] ,[IsFirstLogin],[IsGuest],[OTP],[IsOTPVerified],[IsAdmin]) SELECT @CustomerGuid, Name, [Password], [Salt], @IsActive,@Deleted,@LastIpAddress,@CreatedOn,@IsFirstLogin,@IsGuest,@OTP,@IsOTPVerified,@IsAdmin FROM common.[Users] WHERE Id = @UserId;SELECT @@Identity;"></add>
    <add key="InsertCustomerGroup" value="INSERT INTO [Group_Customer]([CustomerId],[GroupId],[CreatedOn],[CreatedBy]) VALUES(@User_Id, @Group_Id, @CreatedOn, @CreatedBy);select @@Identity;"></add>
    <add key="CheckActionExistQuery" value="SELECT Id FROM [Group_Customer] WHERE CustomerId = @CustomerId AND GroupId = @GroupId;"></add>
    <add key="LinkCustomerToBook" value="DECLARE @BookId int;
                       DECLARE @UserTypeId int;
                       SELECT @BookId = Id from Book where BookGUID = @BookGUID;
                       SELECT @UserTypeId = Id from common.UserTypes where LOWER(UserType) = LOWER(@UserType);
                       IF NOT EXISTS(SELECT Id from BookContributors where BookId = @BookId and ContributorId = @CustomerId)
                       BEGIN
                       INSERT INTO [BookContributors]([BookId],[ContributorId],[IsActive],[UserType])
                       VALUES (@BookId, @CustomerId,1,@UserTypeId); SELECT @@IDENTITY;
                       END
                       ELSE
                           SELECT -1;"></add>
    <add key="AddUserPreference" value="
         DECLARE @UserId int;
         SELECT @UserId = Id from Common.Users where email = @Email
         INSERT INTO [UserPreference]([UserId],[SearchPreference],[CommentPreference],[CreatedBy],[CreatedOn]) VALUES(@UserId,'PRIVATE','NOCOMMENT', @UserId,getdate())
         SELECT @@Identity;"></add>
    <add key="LinkCustomerWithGroup" value="Insert into dbo.Rel_Groups_Customers ([Customer_Id],[Group_Id],[CreatedOn])
        values (@CustomerId,(select Id from [common].[Group] Where Name=@GroupName),GETDATE());
        Select @@Identity;">
  </add>
  </CustomerQueryConfigurations>
</configuration>
